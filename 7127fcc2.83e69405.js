(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{132:function(e,n,t){"use strict";t.d(n,"a",(function(){return o})),t.d(n,"b",(function(){return p}));var r=t(0),i=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function d(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var b=i.a.createContext({}),c=function(e){var n=i.a.useContext(b),t=n;return e&&(t="function"==typeof e?e(n):d(d({},n),e)),t},o=function(e){var n=c(e.components);return i.a.createElement(b.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},m=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,b=s(e,["components","mdxType","originalType","parentName"]),o=c(t),m=r,p=o["".concat(l,".").concat(m)]||o[m]||u[m]||a;return t?i.a.createElement(p,d(d({ref:n},b),{},{components:t})):i.a.createElement(p,d({ref:n},b))}));function p(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=m;var d={};for(var s in n)hasOwnProperty.call(n,s)&&(d[s]=n[s]);d.originalType=e,d.mdxType="string"==typeof e?e:r,l[1]=d;for(var b=2;b<a;b++)l[b]=t[b];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},95:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return d})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return c}));var r=t(3),i=t(7),a=(t(0),t(132)),l={title:"Steuern zeitkritischer Aufgaben",sidebar_label:"7. Zeitkritische Aufgaben",custom_edit_url:null,keywords:["Zeitsteuerung","Arduino","millis-Funktion","nichtblockierende Funktionen","blockierende Funktionen","Blinken","LED","Lauflicht","Reaktionstester"]},d={unversionedId:"arduino/millis",id:"arduino/millis",isDocsHomePage:!1,title:"Steuern zeitkritischer Aufgaben",description:"Bisher wurde nur die delay() Methode zum Steuern von zeitkritischen Abl\xe4ufen verwendet, welche den Programmablauf f\xfcr die angegeben Zeit unterbricht. Hierbei handelt es sich um eine blockierende Funktion, da der Mikrocontroller w\xe4hrend der Programmverz\xf6gerung keine anderen Aufgaben ausf\xfchren kann.",source:"@site/docs/arduino/millis.md",slug:"/arduino/millis",permalink:"/docs/arduino/millis",editUrl:null,version:"current",sidebar_label:"7. Zeitkritische Aufgaben",sidebar:"sideBarArduino",previous:{title:"Funktionen",permalink:"/docs/arduino/functions"},next:{title:"Arrays (Listen)",permalink:"/docs/arduino/array"}},s=[{value:"<code>millis()</code>",id:"millis",children:[]},{value:"Blinken mit <code>millis()</code>",id:"blinken-mit-millis",children:[{value:"Erl\xe4uterungen zum Programm",id:"erl\xe4uterungen-zum-programm",children:[]}]},{value:"Aufgaben",id:"aufgaben",children:[]}],b={rightToc:s};function c(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Bisher wurde nur die ",Object(a.b)("inlineCode",{parentName:"p"},"delay()")," Methode zum Steuern von zeitkritischen Abl\xe4ufen verwendet, welche den Programmablauf f\xfcr die angegeben Zeit unterbricht. Hierbei handelt es sich um eine ",Object(a.b)("strong",{parentName:"p"},"blockierende Funktion"),", da der Mikrocontroller w\xe4hrend der Programmverz\xf6gerung keine anderen Aufgaben ausf\xfchren kann."),Object(a.b)("h2",{id:"millis"},Object(a.b)("inlineCode",{parentName:"h2"},"millis()")),Object(a.b)("p",null,"Eine bessere M\xf6glichkeit zur Steuerung von zeitlichen Abl\xe4ufen ergibt sich mit der ",Object(a.b)("inlineCode",{parentName:"p"},"millis()")," Methode, welche die (vergangene) Zeit seit dem Programmstart angibt."),Object(a.b)("p",null,"Durch den Aufruf der folgenden Zeilen ist es m\xf6glich, die seit dem Start des Arduinos vergangene Zeit in Millisekunden zu bestimmen. "),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-arduino"}),"long aktuelleZeit;         // Variable vom Typ long (32 bit) f\xfcr die Zeit\naktuelleZeit = millis();   // seit dem Start des Arduino-Boards vergangene Zeit in ms\n")),Object(a.b)("p",null,"Da die R\xfcckgabewerte der ",Object(a.b)("inlineCode",{parentName:"p"},"millis()"),"-Funktion relativ schnell sehr gro\xdf werden k\xf6nnen, sollten diese  immer einer Variablen vom Typ  ",Object(a.b)("inlineCode",{parentName:"p"},"long")," oder besser vom Typ ",Object(a.b)("inlineCode",{parentName:"p"},"unsinged long")," \xfcberegeben werden."),Object(a.b)("h2",{id:"blinken-mit-millis"},"Blinken mit ",Object(a.b)("inlineCode",{parentName:"h2"},"millis()")),Object(a.b)("p",null," Im folgenden Programm wird nicht einfach nur bis zum Umschalten der LED mit der ",Object(a.b)("inlineCode",{parentName:"p"},"delay()")," Methode gewartet, sondern in einer Schleife ",Object(a.b)("em",{parentName:"p"},"regelm\xe4\xdfig auf die Uhr geschaut"),"  und \xfcberpr\xfcft, ob die LED umgeschaltet werden muss. Da nicht nur gewartet wird, sondern ",Object(a.b)("strong",{parentName:"p"},"das vergangene Zeitintervall immer wieder \xfcberpr\xfcft")," wird, k\xf6nnen zwischen jedem neuen \xdcberpr\xfcfen der Zeit auch andere Aktionen ausgef\xfchrt werden."),Object(a.b)("p",null,"Mit diesem Konzept kann auch ein ",Object(a.b)("strong",{parentName:"p"},"einfaches Multitasking")," (also das scheinbar parallele Abarbeiten von Aufgaben) auf dem Arduino realisiert werden."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-arduino"}),"// L\xe4sst eine LED mit Hilfe der millis() Funktion blinken. \n\n#define LED 2                        // Pin der LED\n\nint zustandLED = LOW;                // zu setzender LED-Zustand (LOW = 0 = aus)\nunsigned long letzteLedZeit = 0;     // Zeitpunkt LED-\xc4nderung\nunsigned long zeitDifferenz = 1000;  // Blinkintervall in ms\n\nvoid setup() \n{\n  pinMode(LED, OUTPUT);              // Pin als Output\n}\n\nvoid loop() \n{\n  //highlight-next-line         \n  unsigned long aktuelleZeit = millis(); // Zeit seit Programmstart in Millisekunden\n\n  // Es wird die Zeit bestimmt, die seit dem letzten Umschalten der LED vergangen ist.\n  // Ist die vergangene Zeit gr\xf6\xdfergleich `zeitDifferenz`, so wird der Wert von `zustandLED`\n  // angepasst und anschlie\xdfend der Pin auf den entsprechenden Zustand gesetzt.\n  //highlight-start\n  if (aktuelleZeit - letzteLedZeit >= zeitDifferenz) \n  {\n    if (zustandLED == LOW){ // \xdcberpr\xfcfen des LED Zustands\n      zustandLED = HIGH;\n    } \n    else{\n      zustandLED = LOW;\n    }\n    digitalWrite(LED, zustandLED);    // Pin auf `zustandLED` setzen\n    letzteLedZeit = aktuelleZeit;     // Zeit des Umschaltens speichern\n  }\n  //highlight-end\n}\n")),Object(a.b)("h3",{id:"erl\xe4uterungen-zum-programm"},"Erl\xe4uterungen zum Programm"),Object(a.b)("p",null,"Die LED soll umgeschaltet werden, wenn seit dem letzten Umschalten eine festgelegte Zeit vergangen ist. Diese \xdcberpr\xfcfung findet in der ",Object(a.b)("inlineCode",{parentName:"p"},"if-else"),"-Abfrage statt:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-arduino"}),"if (aktuelleZeit - letzteLedZeit >= zeitDifferenz) \n")),Object(a.b)("p",null,"Ist mehr Zeit als in ",Object(a.b)("inlineCode",{parentName:"p"},"zeitDifferenz")," angegeben vergangen, so wird als erstes der Zustand der LED \xfcberpr\xfcft:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-arduino"}),"if (zustandLED == LOW){ // \xdcberpr\xfcfen des LED Zustands\n  zustandLED = HIGH;\n} \nelse{\n  zustandLED = LOW;\n}\n")),Object(a.b)("p",null," Hierf\xfcr wurde global die Zustandsvariable ",Object(a.b)("inlineCode",{parentName:"p"},"zustandLED")," definiert. Soll der Zustand der LED ge\xe4ndert werden (an oder aus), so wird der neue Zustand der LED in der Variable ",Object(a.b)("inlineCode",{parentName:"p"},"zustandLED")," vermerkt ",Object(a.b)("strong",{parentName:"p"},"und anschlie\xdfend")," mit"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-arduino"}),"digitalWrite(LED, zustandLED);    // Pin auf `zustandLED` setzen\n")),Object(a.b)("p",null,"der LED \xfcbergeben. Erst durch den Befehl ",Object(a.b)("inlineCode",{parentName:"p"},"digitalWrite()")," wird die LED umgeschaltet.\nAnschlie\xdfend muss der Zeitpunkt des Umschaltens gespeichert werden, damit sp\xe4ter wieder die Zeit zum erneuten Umschalten bestimmt werden kann:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-arduino"}),"letzteLedZeit = aktuelleZeit;     // Zeit des Umschaltens speichern\n")),Object(a.b)("h2",{id:"aufgaben"},"Aufgaben"),Object(a.b)("p",null,"Verwenden Sie zum L\xf6sen der Aufgaben die ",Object(a.b)("inlineCode",{parentName:"p"},"delay()")," Funktion."),Object(a.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(a.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(a.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),Object(a.b)("strong",{parentName:"h5"},"\xdcben"))),Object(a.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("ol",{parentName:"div"},Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Schreiben Sie ein Programm, welches eine LED mit ",Object(a.b)("strong",{parentName:"p"},"verschiedene An- und Auszeiten blinken")," la\u0308sst. Nutzen Sie ",Object(a.b)("inlineCode",{parentName:"p"},"millis()"),".")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Schlie\xdfen Sie eine zweite LED an den Arduino an und lassen sie diese ",Object(a.b)("strong",{parentName:"p"},"unabh\xe4ngig")," von der ersten LED mit einem ",Object(a.b)("strong",{parentName:"p"},"anderen Rhythmus")," blinken.")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Schreiben Sie ein Programm, welches eine LED nur dann ",Object(a.b)("strong",{parentName:"p"},"langsam blinken")," la\u0308sst,",Object(a.b)("strong",{parentName:"p"}," wenn ein Taster gedr\xfcckt")," ist. Sobald der Taster losgelassen wurde, soll die LED aus gehen (nicht erst nach dem Beenden des Blink-Intervalls).")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Programmieren Sie einen ",Object(a.b)("strong",{parentName:"p"},"Reaktionstester"),". Bauen Sie daf\xfcr zuerst eine Schaltung ",Object(a.b)("strong",{parentName:"p"},"mit zwei Tastern und zwei verschiedenfarbigen LEDs")," auf. Implementieren Sie folgendes Verhalten:"),Object(a.b)("ol",{parentName:"li"},Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Als Indikator, das der Test beginnen kann, leuchtet zu Beginn die ",Object(a.b)("strong",{parentName:"p"},"LED 1")," und auf dem seriellen Monitor wird folgender Text ausgegeben:"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-text"}),"-------------------------------\nReaktionstester bereit!\n"))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Anschlie\xdfend wird der ",Object(a.b)("strong",{parentName:"p"},"Taster S1")," gedr\xfcckt. Auf dem seriellen Monitor erscheint der Text:"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-text"}),"Warten auf das rote Licht ...\n")),Object(a.b)("p",{parentName:"li"},"Jetzt wird gewartet bis die ",Object(a.b)("strong",{parentName:"p"},"LED 2")," aufleuchtet.")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Nach einer ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.arduino.cc/reference/de/language/functions/random-numbers/random/"}),"zuf\xe4lligen")," Zeit leuchtet die ",Object(a.b)("strong",{parentName:"p"},"LED 2")," auf und die ",Object(a.b)("strong",{parentName:"p"},"LED 1")," f\xe4ngt an schnell zu blinken. Von diesem Zeiptunkt wird die Zeit gemessen, bis der ",Object(a.b)("strong",{parentName:"p"},"Taster 2")," bet\xe4gt wird.")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Sobald der",Object(a.b)("strong",{parentName:"p"}," Taster 2")," gedr\xfcckt wurde, erlischt die ",Object(a.b)("strong",{parentName:"p"},"LED 1")," und auf dem seriellen Monitor wird die Reaktionszeit in Sekunden angegeben:"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-text"}),"Reaktionszeit: 1,23 Sekunden\n-------------------------------\n")))))))))}c.isMDXComponent=!0}}]);