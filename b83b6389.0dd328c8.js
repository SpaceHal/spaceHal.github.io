(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{110:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return b})),t.d(n,"default",(function(){return d}));var i=t(3),r=t(7),a=(t(0),t(133)),l={title:"Programmiertechniken - Schleifen",sidebar_label:"4. Schleifen",custom_edit_url:null},c={unversionedId:"arduino/loop",id:"arduino/loop",isDocsHomePage:!1,title:"Programmiertechniken - Schleifen",description:"Die for-Schleife",source:"@site/docs/arduino/loop.md",slug:"/arduino/loop",permalink:"/docs/arduino/loop",editUrl:null,version:"current",sidebar_label:"4. Schleifen",sidebar:"sideBarArduino",previous:{title:"Programmiertechniken - Variablen",permalink:"/docs/arduino/variable"},next:{title:"Den Arduino mit einem Taster steuern",permalink:"/docs/arduino/input"}},b=[{value:"Die for-Schleife",id:"die-for-schleife",children:[{value:"Vergleichsoperatoren",id:"vergleichsoperatoren",children:[]},{value:"Beispiel",id:"beispiel",children:[]},{value:"Eine geschachtelte <code>for</code> Schleife",id:"eine-geschachtelte-for-schleife",children:[]}]},{value:"Aufgaben",id:"aufgaben",children:[]}],o={rightToc:b};function d(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},o,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"die-for-schleife"},"Die for-Schleife"),Object(a.b)("p",null,"Die ",Object(a.b)("inlineCode",{parentName:"p"},"for"),"-Schleife geh\xf6rt zu den Kontrollstrukturen eines Programms und erlaubt das wiederholende Ausf\xfchren eines Programmabschnitts. Die Schleife beginnt mit dem ",Object(a.b)("strong",{parentName:"p"},"Schl\xfcsselwort")," ",Object(a.b)("inlineCode",{parentName:"p"},"for"),", gefolgt von ",Object(a.b)("strong",{parentName:"p"},"drei Anweisungen")," im ",Object(a.b)("strong",{parentName:"p"},"Schleifenkopf"),". Im ",Object(a.b)("strong",{parentName:"p"},"Schleifenrumpf"),", welcher in geschweiften Klammern ",Object(a.b)("inlineCode",{parentName:"p"},"{...}")," steht, befindet sich der wiederholend auszuf\xfchrende Anweisungsblock."),Object(a.b)("img",{src:"/img/arduino/forLoop.png",alt:"drawing",width:"350pt",class:"center"}),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("strong",{parentName:"li"},"Initialisierung")," mit einer ",Object(a.b)("strong",{parentName:"li"},"Z\xe4hlvariable"),". Die Deklaration der Z\xe4hlvariable ",Object(a.b)("inlineCode",{parentName:"li"},"int i")," kann innerhalb oder au\xdferhalb des Schleifenkopfs erfolgen. Wird sie im Schleifenkopf initialisiert, wird Z\xe4hlvariable nur w\xe4hrend der Abarbeitung der Schleife existieren."),Object(a.b)("li",{parentName:"ol"},"\xdcberpr\xfcfen der ",Object(a.b)("strong",{parentName:"li"},"Testbedingung")," mittels logischer Ausdr\xfccke. Im obigen Beispiel liefert die Testbedingung so lange ",Object(a.b)("inlineCode",{parentName:"li"},"true"),", wie der Wert von  ",Object(a.b)("inlineCode",{parentName:"li"},"i")," kleiner als ",Object(a.b)("inlineCode",{parentName:"li"},"10")," ist. F\xfcr ",Object(a.b)("inlineCode",{parentName:"li"},"i = 10")," oder Werte gr\xf6\xdfer ",Object(a.b)("inlineCode",{parentName:"li"},"10")," liefert die Testbedingung ",Object(a.b)("inlineCode",{parentName:"li"},"false"),"."),Object(a.b)("li",{parentName:"ol"},"Wenn die Testbedingung ",Object(a.b)("inlineCode",{parentName:"li"},"false")," liefert, wird die Schleife ",Object(a.b)("strong",{parentName:"li"},"direkt beendet")," (ohne die Anweisungen im Schleifenrumpf auszuf\xfchren)."),Object(a.b)("li",{parentName:"ol"},"Wenn die Testbedingung ",Object(a.b)("inlineCode",{parentName:"li"},"true")," liefert, werden die Anweisungen im Schleifenrumpf ausgef\xfchrt."),Object(a.b)("li",{parentName:"ol"},Object(a.b)("strong",{parentName:"li"},"Aktualisieren")," der Z\xe4hlvariable. Der Ausdruck ",Object(a.b)("inlineCode",{parentName:"li"},"i++")," bedeutet ",Object(a.b)("inlineCode",{parentName:"li"},"i=i+1")," und erh\xf6ht den Wert der Variable ",Object(a.b)("inlineCode",{parentName:"li"},"i")," bei jedem Durchlauf.")),Object(a.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(a.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(i.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(a.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(a.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("p",{parentName:"div"},"Die einzelnen Ausdr\xfccke im Schleifenkopf werden mit einem ",Object(a.b)("strong",{parentName:"p"},"Semikolon")," voneinander getrennt."))),Object(a.b)("h3",{id:"vergleichsoperatoren"},"Vergleichsoperatoren"),Object(a.b)("p",null,"Arduino stellt eine Reihe verschiedener ",Object(a.b)("strong",{parentName:"p"},"Vergleichsoperatoren")," zur Verf\xfcgung. Alle Operatoren haben gemeinsam, dass zwei Werte miteinander verglichen werden und als Ergebnis nur ",Object(a.b)("inlineCode",{parentName:"p"},"true")," (1) oder ",Object(a.b)("inlineCode",{parentName:"p"},"false")," (0) zur\xfcckgegeben wird."),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object(i.a)({parentName:"tr"},{align:null}),"Operator"),Object(a.b)("th",Object(i.a)({parentName:"tr"},{align:null}),"Erl\xe4uterungen"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(i.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"x == y")),Object(a.b)("td",Object(i.a)({parentName:"tr"},{align:null}),"Ist x gleich y?")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(i.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"x != y")),Object(a.b)("td",Object(i.a)({parentName:"tr"},{align:null}),"Ist x ungleich y?")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(i.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"x < y")),Object(a.b)("td",Object(i.a)({parentName:"tr"},{align:null}),"Ist x kleiner y?")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(i.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"x > y")),Object(a.b)("td",Object(i.a)({parentName:"tr"},{align:null}),"Ist x gr\xf6\xdfer y?")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(i.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"x <= y")),Object(a.b)("td",Object(i.a)({parentName:"tr"},{align:null}),"Ist x kleiner gleich y?")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(i.a)({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"x >= y")),Object(a.b)("td",Object(i.a)({parentName:"tr"},{align:null}),"Ist x gr\xf6\xdfer gleich y?")))),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Die Operatoren ",Object(a.b)("inlineCode",{parentName:"p"},"=")," und ",Object(a.b)("inlineCode",{parentName:"p"},"==")," sind sehr verschieden. W\xe4hrend ",Object(a.b)("inlineCode",{parentName:"p"},"=")," ein ",Object(a.b)("strong",{parentName:"p"},"Zuweisungsoperator")," ist, also einer Variablen einen Wert zuweist (z.B. ",Object(a.b)("inlineCode",{parentName:"p"},"int wert = 312"),") handelt es sich bei ",Object(a.b)("inlineCode",{parentName:"p"},"==")," um einen ",Object(a.b)("strong",{parentName:"p"},"Vergleichsoperator"),", der ",Object(a.b)("inlineCode",{parentName:"p"},"true")," zur\xfcckgibt, wenn zwei Werte gleich sind. Das Verwechseln beider Operatoren ist ein h\xe4ufiger Fehler bei Programmieranf\xe4ngern.")),Object(a.b)("h3",{id:"beispiel"},"Beispiel"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-arduino",metastring:"{7-11}","{7-11}":!0}),'// Einfaches Beispiel f\xfcr eine for-Schleife\n\nvoid setup() {\n  Serial.begin(115200);\n  Serial.println("Warten (1 sec) ....");\n  delay(1000);\n  for (int i = 0 ; i<5; i++)\n  {\n    Serial.print("Zaehler: "); Serial.println(i);\n    delay(500);\n  }\n}\n\nvoid loop() {\n  // bleibt leer\n}\n')),Object(a.b)("p",null,"Ausgabe auf dem seriellen Monitor:"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-text"}),"Warten (1 sec) ....\nZaehler: 0\nZaehler: 1\nZaehler: 2\nZaehler: 3\nZaehler: 4\n")),Object(a.b)("h3",{id:"eine-geschachtelte-for-schleife"},"Eine geschachtelte ",Object(a.b)("inlineCode",{parentName:"h3"},"for")," Schleife"),Object(a.b)("p",null,"Schleifen k\xf6nnen auch geschachtelt werden. Bei einer geschachtelten Schleife befindet sich im Rumpf der ",Object(a.b)("strong",{parentName:"p"},"\xe4u\xdferen Schleife")," eine weitere ",Object(a.b)("strong",{parentName:"p"},"innere Schleife"),". Dadurch wird die innere Schleife sooft neu gestartet, wie es in der \xe4u\xdferen Schleife angegeben ist. "),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-arduino"}),'// Eine geschachtelte for-Schleife\n\nvoid setup() {\n  Serial.begin(115200);\n  Serial.println("Warten (1 sec) ....");\n  delay(1000);\n  int i,j; // Deklaration der Z\xe4hlvariablen kann auch au\xdferhalb der Schleife stattfinden\n  // highlight-next-line\n  for (i = 0 ; i<5; i++) // Zeilen (\xe4u\xdfere Schleife)\n  {     \n    Serial.println();  \n    Serial.print("Zeile: "); Serial.print(i);\n    // highlight-next-line\n    for(j=0; j<10; j++)  // Spalten (innere Schleife)\n    {\n      Serial.print("*");\n      delay(100);\n    }\n  }\n}\n\nvoid loop() {\n  // bleibt leer\n}\n')),Object(a.b)("p",null,"Im obigen Beispiel wird die innere Schleife "),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-arduino"}),"for(j=0; j<10; j++)  // Spalten (innere Schleife)\n")),Object(a.b)("p",null,"welche 10 mal durchlaufen wird, von der \xe4u\xdferen Schleife 5 mal neu gestartet. Insgesamt wird also die Zeile "),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-arduino"}),'Serial.print("*");\n')),Object(a.b)("p",null,"in der inneren Schleife 50 mal aufgerufen."),Object(a.b)("p",null,"Auf dem seriellen Monitor erscheint folgende Ausgabe:"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-console"}),"Warten (1 sec) ....\n\nZeile: 0**********\nZeile: 1**********\nZeile: 2**********\nZeile: 3**********\nZeile: 4**********\n")),Object(a.b)("h2",{id:"aufgaben"},"Aufgaben"),Object(a.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(a.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(i.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(a.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),Object(a.b)("strong",{parentName:"h5"},"\xdcben"))),Object(a.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("ol",{parentName:"div"},Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Schreiben Sie ein Programm, welches abwechselnd zwei verschiedene LEDs blinken l\xe4sst:"),Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"Zuerst blinkt die 1. LED 3x auf."),Object(a.b)("li",{parentName:"ul"},"Anschlie\xdfend blinkt die 2. LED 5x auf."),Object(a.b)("li",{parentName:"ul"},"Dann beginnt die Blinksequenz wieder von vorne."),Object(a.b)("li",{parentName:"ul"},"Nutzen Sie die ",Object(a.b)("inlineCode",{parentName:"li"},"for"),"-Schleife und vermeiden Sie sich wiederholenden Code."))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Schreiben Sie ein Programm, welches die ",Object(a.b)("strong",{parentName:"p"},"Blinkgeschwindigkeit")," einer (oder mehrerer) LEDs schrittweise von ganz langsam zu  ganz schnell und wieder zu ganz langsam, etc. \xe4ndert.")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"\xc4ndern Sie das Programm mit der geschachtelten Schleife so, dass auf dem seriellen Monitor folgender Text ausgegeben wird:"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-text"}),"Zeile: 0*\nZeile: 1**\nZeile: 2***\nZeile: 3****\nZeile: 4*****\nZeile: 5******\nZeile: 6*******\nZeile: 7********\nZeile: 8*********\nZeile: 9**********\n")),Object(a.b)("p",{parentName:"li"},Object(a.b)("em",{parentName:"p"},"Hinweis: Bei der Testbedingung im Schleifenkopf k\xf6nnen auch zwei Variablen miteinander verglichen werden: ",Object(a.b)("inlineCode",{parentName:"em"},"for(int i = 0; i > k; i++){ ... }")))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"\xc4ndern Sie das Programm mit der geschachtelten Schleife noch einmal. Diesmal soll folgender Text ausgegeben werden:"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-text"}),"Zeile: 0**********\nZeile: 1*********\nZeile: 2********\nZeile: 3*******\nZeile: 4******\nZeile: 5*****\nZeile: 6****\nZeile: 7***\nZeile: 8**\nZeile: 9*\n"))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Lassen Sie zwei LEDs im angegebenen Rhythmus blinken."),Object(a.b)("img",{src:"/img/arduino/blinkRhythmus.svg",alt:"Blink-Rhythmus For Schleife",width:"500pt",class:"center"}),"* Nutzen Sie geschachtelte `for`-Schleifen. * Verwenden Sie maximal zweimal den Befehl `delay()`."),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Erweitern Sie folgendes Programmger\xfcst so, dass 5 angeschlossene LEDs wie unten abgebildet blinken. Zum Vervollst\xe4ndigen des Programms d\xfcrfen Sie ",Object(a.b)("strong",{parentName:"p"},"maximal zweimal")," den Befehl ",Object(a.b)("inlineCode",{parentName:"p"},"digitalWrite()")," verwenden.",Object(a.b)("br",{parentName:"p"}),"\n","Achten Sie beim Aufbauen der Schaltung auf die Verwendung der richtigen Pins."),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-arduino"}),"// 5 LEDs mit for-Schleife blinken lassen\nint dTime = 200;\n\nvoid setup(){\n    for (int i = 2; i <= 6; i++){\n        pinMode(i, OUTPUT);\n    }\n}\nvoid loop(){\n    // maximal zweimal 'digitalWrite()' verwenden\n  \n}\n")),Object(a.b)("img",{src:"/img/arduino/led5forLoop_low.gif",alt:"drawing",width:"500pt",class:"center"}))))))}d.isMDXComponent=!0},133:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return u}));var i=t(0),r=t.n(i);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function b(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=r.a.createContext({}),d=function(e){var n=r.a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=d(e.components);return r.a.createElement(o.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},m=r.a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,o=b(e,["components","mdxType","originalType","parentName"]),p=d(t),m=i,u=p["".concat(l,".").concat(m)]||p[m]||s[m]||a;return t?r.a.createElement(u,c(c({ref:n},o),{},{components:t})):r.a.createElement(u,c({ref:n},o))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=m;var c={};for(var b in n)hasOwnProperty.call(n,b)&&(c[b]=n[b]);c.originalType=e,c.mdxType="string"==typeof e?e:i,l[1]=c;for(var o=2;o<a;o++)l[o]=t[o];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);