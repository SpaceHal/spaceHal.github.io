(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{131:function(e,n,t){"use strict";t.d(n,"a",(function(){return c})),t.d(n,"b",(function(){return m}));var i=t(0),r=t.n(i);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function u(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?u(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=r.a.createContext({}),s=function(e){var n=r.a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return r.a.createElement(o.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},p=r.a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,o=d(e,["components","mdxType","originalType","parentName"]),c=s(t),p=i,m=c["".concat(u,".").concat(p)]||c[p]||b[p]||a;return t?r.a.createElement(m,l(l({ref:n},o),{},{components:t})):r.a.createElement(m,l({ref:n},o))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,u=new Array(a);u[0]=p;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l.mdxType="string"==typeof e?e:i,u[1]=l;for(var o=2;o<a;o++)u[o]=t[o];return r.a.createElement.apply(null,u)}return r.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},77:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return u})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return d})),t.d(n,"default",(function(){return s}));var i=t(3),r=t(7),a=(t(0),t(131)),u={title:"Eine Men\xfcsteuerung mit zwei Tastern und drei LEDs",sidebar_label:"1. Men\xfcsteuerung",description:"Ein einfache Men\xfcsteuerung mit zwei Tastern und drei LEDs f\xfcr Arduino"},l={unversionedId:"arduino/simpleMenu",id:"arduino/simpleMenu",isDocsHomePage:!1,title:"Eine Men\xfcsteuerung mit zwei Tastern und drei LEDs",description:"Ein einfache Men\xfcsteuerung mit zwei Tastern und drei LEDs f\xfcr Arduino",source:"@site/docs/arduino/simpleMenu.md",slug:"/arduino/simpleMenu",permalink:"/docs/arduino/simpleMenu",editUrl:"https://spacehal.github.io/docs/arduino/simpleMenu.md",version:"current",sidebar_label:"1. Men\xfcsteuerung",sidebar:"someSidebar",previous:{title:"Analoge Werte einlesen",permalink:"/docs/arduino/analogInput"},next:{title:"Mit Objektorientierung zum Multitasking",permalink:"/docs/arduino/objectOriented"}},d=[{value:"Men\xfcanzeige",id:"men\xfcanzeige",children:[]},{value:"Aufrufen der Men\xfc-Funktionen",id:"aufrufen-der-men\xfc-funktionen",children:[]},{value:"Beispiele f\xfcr Event-Funktionen",id:"beispiele-f\xfcr-event-funktionen",children:[]},{value:"Alles zusammen",id:"alles-zusammen",children:[]}],o={rightToc:d};function s(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},o,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Mit dem folgenden Programm kann eine einfach Men\xfcsteuerung mit zwei Tastern (Men\xfcpunkt \xe4ndern, Men\xfcpunkt aktivieren) und drei LEDs realisiert werden."),Object(a.b)("h2",{id:"men\xfcanzeige"},"Men\xfcanzeige"),Object(a.b)("p",null,"Als Grundlage f\xfcr die Men\xfcsteuerung dient ein ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"stateMachine"}),"endlicher Automat")," zur Auswahl verschiedener Men\xfceintr\xe4ge. F\xfcr jeden Men\xfceintrag wird eine unterschiedliche Kombination leuchtender LEDs dargestellt. Hierf\xfcr wird die Funktion "),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{}),"setLeds(bool pLed1, bool pLed2)\n")),Object(a.b)("p",null,"genutzt. Neben den LEDs wird auch der serielle Monitor zur Darstellung der Men\xfcsteuerung genutzt."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-arduino"}),'//  Aufz\xe4hlungsdatentyp f\xfcr die Men\xfceintr\xe4ge \nenum MenuStates { STATE0, STATE1, STATE2, STATE3 };\nMenuStates menuState = STATE0;\n\n// Bei jedem Aufruf \xe4ndert sich der gew\xe4hlte Men\xfceintrag. Es findet also ein \n// \xdcbergang (\xc4nderung) des `menuState` statt: (old state -> new state)\nvoid doMenu() {\n  switch (menuState) {\n    case STATE0:          // old menu state\n      menuState = STATE1; // new menu state\n      setLeds(0, 1);      // aktuellen Men\xfceintrag anzeigen\n      Serial.print("\\n [Menue: STATE1] ");\n      break;\n\n    case STATE1:\n      menuState = STATE2; // new menu state\n      setLeds(1, 0);      // aktuellen Men\xfceintrag anzeigen\n      Serial.print("\\n [Menue: STATE2] ");\n      break;\n\n    case STATE2:\n      menuState = STATE0; // next menu state\n      setLeds(0, 0);      // aktuellen Men\xfceintrag anzeigen\n      Serial.print("\\n [Menue: STATE0] ");\n      break;\n  }\n}\n')),Object(a.b)("h2",{id:"aufrufen-der-men\xfc-funktionen"},"Aufrufen der Men\xfc-Funktionen"),Object(a.b)("p",null,"Zus\xe4tzlich zum endlichen Automaten der Men\xfcsteuerung gibt es die Funktion ",Object(a.b)("inlineCode",{parentName:"p"},"doTasks()"),", welche - wenn der Men\xfceintrag aktiviert wurde - die zugeh\xf6rigen Men\xfc-Funktionen ",Object(a.b)("inlineCode",{parentName:"p"},"doEvent1()"),", ",Object(a.b)("inlineCode",{parentName:"p"},"doEvent2()"),", etc. aufruft. "),Object(a.b)("p",null,"Diese Event-Funktionen enthalten den f\xfcr den entsprechenden Men\xfceintrag auszuf\xfchrenden Programmcode. Der R\xfcckgabewert der Event-Funktionen gibt an, ob das Event bereits beendet ist, oder ein weiteres Mal aufgereufen werden soll."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-arduino"}),"\n// Gibt an, ob ein Men\xfceintrag aktiviert ist.\nbool taskIsRunning = false; \n\n// Die Funktion ruft mit Hilfe der globalen Variable `menuState` die `doEvent()` Funktionen \n// f\xfcr den aktivierten Men\xfceintrag auf. Sie sollte regelm\xe4\xdfig in loop() aufgerufen werden.\nvoid doTasks() {\n  switch (menuState) {\n    case STATE0:\n      taskIsRunning = !doEvent0(); // doEvent0() returns true if finished.\n      break;\n\n    case STATE1:\n      taskIsRunning = !doEvent1();\n      break;\n\n    case STATE2:\n      taskIsRunning = !doEvent2();\n      break;\n  }\n}\n")),Object(a.b)("h2",{id:"beispiele-f\xfcr-event-funktionen"},"Beispiele f\xfcr Event-Funktionen"),Object(a.b)("p",null,"Die Beispiele f\xfcr die Event-Funktionen schalten eine zuerst LED an und nach einer Sekunde (",Object(a.b)("inlineCode",{parentName:"p"},"doEvent0()"),") oder f\xfcnf (",Object(a.b)("inlineCode",{parentName:"p"},"doEvent1()"),") Sekunden wieder aus. Diese Event-Funktionen sind blockierend,  unterbrechen also das Programm, bis sie beendet wurden."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-arduino"}),'// Jede `doEvent` Funktion muss `true` zur\xfcckgeben, wenn sie beendet ist.\n// F\xfcr jeden Men\xfceintrag sollte es eine eigene `doEvent` Funktion geben.\n\n// Blockierendes Event\nbool doEvent0() {\n  digitalWrite(pinTaskRunning, HIGH);\n  Serial.print("Event 0 is blocking for 1 sec . ");\n  delay(1000);\n  Serial.print("finished");\n  digitalWrite(pinTaskRunning, LOW);\n  return true;  // gibt `true` zur\xfcck, wenn die Funktion beendet ist\n}\n\n// Blockierendes Event\nbool doEvent1() {\n  digitalWrite(pinTaskRunning, HIGH);\n  Serial.print("Event 1 is blocking for 5 sec ..... ");\n  delay(5000);\n  Serial.print("finished");\n  digitalWrite(pinTaskRunning, LOW);\n  return true;\n}\n')),Object(a.b)("p",null,"Das Funktion ",Object(a.b)("inlineCode",{parentName:"p"},"doEvent2()")," schaltet eine LED an und wartet dann auf eine Tastereingabe, um die LED wieder auszuschalten und das Event zu beenden. Dieses Event ist nicht blockierend."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-arduino"}),'// Nichtblockierendes Event\nbool doEvent2() {\n  digitalWrite(pinTaskRunning, HIGH);\n  Serial.print("\\n\\t\\tEvent 2 is running (Press Button) ");\n\n  if (debouncerSelect.fell()) {\n    Serial.print(" ... finished");\n    digitalWrite(pinTaskRunning, LOW);\n    return true;  // Task wurde durch den Taster beendet.\n  }\n  else\n    return false; // Task ist immernoch aktiv und wird beim n\xe4chsten loop() Durchlauf erneut aufgerufen.\n}\n')),Object(a.b)("h2",{id:"alles-zusammen"},"Alles zusammen"),Object(a.b)("p",null,"In der ",Object(a.b)("inlineCode",{parentName:"p"},"loop()"),"-Funktion werde zu guter Letzt alle Teile f\xfcr die Men\xfcsteuerung zusammengef\xfcgt. Nachdem die Zust\xe4nde der, mit der ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"debounce#bounce2-bibliothek-zum-entprellen"}),"Bounce2 Bibliothek")," entprellten, Taster aktualisierte worden sind, beginnt die eigentliche Men\xfcsteuerung:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Wenn ein Task (",Object(a.b)("inlineCode",{parentName:"li"},"doEvent()")," Funktionen) noch aktiv ist ",Object(a.b)("inlineCode",{parentName:"li"},"if (taskIsRunning)"),", soll dieser erneut aufgerufen werden."),Object(a.b)("li",{parentName:"ol"},"Ist kein Task aktiv, werden die Taster zur Men\xfcsteuerung eingelesen:",Object(a.b)("ol",{parentName:"li"},Object(a.b)("li",{parentName:"ol"},"Wurde der UP Taster gedr\xfcckt, wird mit ",Object(a.b)("inlineCode",{parentName:"li"},"doMenu()")," das Men\xfc aktualisiert, also ein neuer Men\xfceintrag angezeigt."),Object(a.b)("li",{parentName:"ol"},"Wurde der SELECT Taster gedr\xfcckt, wird der aktuelle Men\xfceintrag mit ",Object(a.b)("inlineCode",{parentName:"li"},"taskIsRunning = true")," aktiviert. Beim n\xe4chsten ",Object(a.b)("inlineCode",{parentName:"li"},"loop()")," Durchlauf wird dann mit ",Object(a.b)("inlineCode",{parentName:"li"},"doTasks()")," die zugeh\xf6rige Event-Funktion aufgerufen.")))),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-arduino"}),"void loop() {\n\n  // aktualisieren der Tasterzust\xe4nde  \n  debouncerSelect.update(); \n  debouncerUp.update();     \n\n  if (taskIsRunning) {\n    doTasks();\n  }\n  else {\n    if (debouncerUp.fell()){       // if button was pressed\n      doMenu();\n    }\n    if (debouncerSelect.fell()){   // if button was pressed\n      taskIsRunning = true;\n    }\n  }\n}\n")),Object(a.b)("p",null,"Im Flussdiagramm ist der gesamte Ablauf noch einmal zusammengefasst."),Object(a.b)("img",{src:"/img/arduino/Menu_FlowChart.png",alt:"drawing",width:"460pt",class:"center"}),Object(a.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(a.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(i.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(a.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),Object(a.b)("strong",{parentName:"h5"},"\xdcben"))),Object(a.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("ol",{parentName:"div"},Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Analysieren Sie das Programmger\xfcst f\xfcr ein einfaches Men\xfc. Gehen Sie dabei auf folgende Fragen ein:"),Object(a.b)("ol",{parentName:"li"},Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Um  welchen Datentyp handelt es sich bei der Variablen ",Object(a.b)("inlineCode",{parentName:"p"},"menuState")," und wof\xfcr wird die Variable verwendet?"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-arduino"}),"MenuStates menuState = STATE0;\n"))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Was macht die Funktion ",Object(a.b)("inlineCode",{parentName:"p"},"setLeds(0, 1)"),"?")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Warum handelt es sich bei den Funktionen ",Object(a.b)("inlineCode",{parentName:"p"},"doEvent0")," und ",Object(a.b)("inlineCode",{parentName:"p"},"doEvent1")," um ",Object(a.b)("strong",{parentName:"p"},"blockierende")," Funktionen und bei ",Object(a.b)("inlineCode",{parentName:"p"},"doEvent2")," um eine ",Object(a.b)("strong",{parentName:"p"},"nichtblockierende")," Funktion?")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Welche Bedeutung hat der R\xfcckgabewert der Event-Funktionen und wof\xfcr wird er ben\xf6tigt?")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Was macht die Funktion ",Object(a.b)("inlineCode",{parentName:"p"},"doTasks()")," und warum wird sie ",Object(a.b)("strong",{parentName:"p"},"nur")," in der ",Object(a.b)("inlineCode",{parentName:"p"},"if"),"-Verzweigung aufgerufen?"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-arduino"}),"if (taskIsRunning) {\n  doTasks();\n}\n"))))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Implementieren Sie die beschriebene Men\xfcssteuerung.")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Erweitern Sie die Men\xfcsteuerung um einen ",Object(a.b)("strong",{parentName:"p"},"weiteren")," Taster. Die Men\xfceintr\xe4ge sollen mit den zwei Tastern in verschiedene Richtungen (auf/ab) ausgew\xe4hlt werden k\xf6nnen."))))))}s.isMDXComponent=!0}}]);