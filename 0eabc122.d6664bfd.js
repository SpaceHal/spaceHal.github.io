(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{134:function(e,n,r){"use strict";r.d(n,"a",(function(){return s})),r.d(n,"b",(function(){return f}));var t=r(0),i=r.n(t);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=i.a.createContext({}),b=function(e){var n=i.a.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},s=function(e){var n=b(e.components);return i.a.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},d=i.a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,o=e.originalType,a=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=b(r),d=t,f=s["".concat(a,".").concat(d)]||s[d]||p[d]||o;return r?i.a.createElement(f,c(c({ref:n},u),{},{components:r})):i.a.createElement(f,c({ref:n},u))}));function f(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=r.length,a=new Array(o);a[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:t,a[1]=c;for(var u=2;u<o;u++)a[u]=r[u];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},69:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return a})),r.d(n,"metadata",(function(){return c})),r.d(n,"rightToc",(function(){return l})),r.d(n,"default",(function(){return b}));var t=r(3),i=r(7),o=(r(0),r(134)),a={id:"botObstacle",title:"Algorithmen mit Hinderniserkennung",sidebar_label:"Suchen, Finden, Ausweichen"},c={unversionedId:"robotik/botObstacle",id:"robotik/botObstacle",isDocsHomePage:!1,title:"Algorithmen mit Hinderniserkennung",description:"* In einer, mit einer schwarzen Linie begrenzten Arena befinden sich zuf\xe4llig verteilte Objekte, welche der Roboter erkennen und aus der Arena herausschieben soll.",source:"@site/docs/robotik/obstacle.md",slug:"/robotik/botObstacle",permalink:"/docs/robotik/botObstacle",editUrl:"https://spacehal.github.io/docs/robotik/obstacle.md",version:"current",sidebar_label:"Suchen, Finden, Ausweichen"},l=[{value:"Braitenberg-Vehikel",id:"braitenberg-vehikel",children:[]}],u={rightToc:l};function b(e){var n=e.components,r=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},u,r,{components:n,mdxType:"MDXLayout"}),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"In einer, mit einer schwarzen Linie begrenzten Arena befinden sich zuf\xe4llig verteilte Objekte, welche der Roboter erkennen und aus der Arena herausschieben soll."),Object(o.b)("li",{parentName:"ul"},"Objekt auf Linie ausweichen und zur Linie zur\xfcckfinden"),Object(o.b)("li",{parentName:"ul"})),Object(o.b)("h2",{id:"braitenberg-vehikel"},"Braitenberg-Vehikel"))}b.isMDXComponent=!0}}]);