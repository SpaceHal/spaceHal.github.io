"use strict";(self.webpackChunkspace_hal=self.webpackChunkspace_hal||[]).push([[5647],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(n),p=a,g=d["".concat(l,".").concat(p)]||d[p]||m[p]||s;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=p;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[d]="string"==typeof e?e:a,i[1]=o;for(var u=2;u<s;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(7294),a=n(6010);const s={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:n,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(s.tabItem,i),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>w});var r=n(7462),a=n(7294),s=n(6010),i=n(2466),o=n(6550),l=n(1980),u=n(7392),c=n(12);function d(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function m(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const r=(0,o.k6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(s),(0,a.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(r.location.search);t.set(s,e),r.replace({...r.location,search:t.toString()})}),[s,r])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,s=m(e),[i,o]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:s}))),[l,u]=g({queryString:n,groupId:r}),[d,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,s]=(0,c.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:r}),f=(()=>{const e=l??d;return p({value:e,tabValues:s})?e:null})();(0,a.useLayoutEffect)((()=>{f&&o(f)}),[f]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),h(e)}),[u,h,s]),tabValues:s}}var f=n(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function k(e){let{className:t,block:n,selectedValue:o,selectValue:l,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),m=e=>{const t=e.currentTarget,n=c.indexOf(t),r=u[n].value;r!==o&&(d(t),l(r))},p=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:i}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>c.push(e),onKeyDown:p,onClick:m},i,{className:(0,s.Z)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":o===t})}),n??t)})))}function N(e){let{lazy:t,children:n,selectedValue:r}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function v(e){const t=h(e);return a.createElement("div",{className:(0,s.Z)("tabs-container",b.tabList)},a.createElement(k,(0,r.Z)({},e,t)),a.createElement(N,(0,r.Z)({},e,t)))}function w(e){const t=(0,f.Z)();return a.createElement(v,(0,r.Z)({key:String(t)},e))}},9309:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>o,metadata:()=>u,toc:()=>d});var r=n(7462),a=(n(7294),n(3905)),s=n(4866),i=n(5162);const o={title:"Inkrementalgeber (Radencoder)",sidebar_label:"Radencoder",description:"Verwendung des Radencoders beim Zumo 32u4",custom_edit_url:null,keywords:["Arduino","Unterricht","Schule","Roboter","Robotik","Odometrie","Positionsbestimmung","Encoder","Radencoder","Zumo32u4","Zumo"]},l=void 0,u={unversionedId:"zumo32u4/encode",id:"zumo32u4/encode",title:"Inkrementalgeber (Radencoder)",description:"Verwendung des Radencoders beim Zumo 32u4",source:"@site/docs/zumo32u4/encode.md",sourceDirName:"zumo32u4",slug:"/zumo32u4/encode",permalink:"/docs/zumo32u4/encode",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{title:"Inkrementalgeber (Radencoder)",sidebar_label:"Radencoder",description:"Verwendung des Radencoders beim Zumo 32u4",custom_edit_url:null,keywords:["Arduino","Unterricht","Schule","Roboter","Robotik","Odometrie","Positionsbestimmung","Encoder","Radencoder","Zumo32u4","Zumo"]},sidebar:"mySidebar",previous:{title:"N\xe4herungssensoren",permalink:"/docs/zumo32u4/proxy"},next:{title:"Inertiale Messeinheit",permalink:"/docs/zumo32u4/imu"}},c={},d=[{value:"<code>static int \tgetCountsLeft()</code>",id:"static-int-getcountsleft",level:2},{value:"Beispiel",id:"beispiel",level:3},{value:"<code>static int \tgetCountsRight()</code>",id:"static-int-getcountsright",level:2},{value:"<code>static int \tgetCountsAndResetLeft()</code>",id:"static-int-getcountsandresetleft",level:2},{value:"<code>static int  getCountsAndResetRight()</code>",id:"static-int--getcountsandresetright",level:2}],m={toc:d},p="wrapper";function g(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("head",null,(0,a.kt)("link",{rel:"canonical",href:"https://spacehal.github.io/docs/zumo32u4/encode"})),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Pololu Zumo 32u4 Library: ",(0,a.kt)("a",{parentName:"em",href:"https://pololu.github.io/zumo-32u4-arduino-library/class_zumo32_u4_encoders.html"},"Odometrie"))),(0,a.kt)("p",null,"Mit der Klasse ",(0,a.kt)("inlineCode",{parentName:"p"},"Zumo32U4Encoders")," werden die Methoden f\xfcr den Motorencoder bereitgestellt. "),(0,a.kt)("p",null,"Mit einem ",(0,a.kt)("a",{parentName:"p",href:"https://de.wikipedia.org/wiki/Inkrementalgeber"},"Inkrementalgeber")," (Rad-Encoder) kann man messen, wie weit sich die einzelnen Motoren zwischen zwei Messungen gedreht haben. Der Zumo 32u4 hat an jedem Motor einen ",(0,a.kt)("a",{parentName:"p",href:"https://www.pololu.com/docs/0J63/all#3.4"},"Quadratur-Encoder"),", welcher mit jeweils einer magnetischen Scheibe an der Motorwelle und einem ",(0,a.kt)("a",{parentName:"p",href:"https://www.leifiphysik.de/elektrizitaetslehre/bewegte-ladungen-feldern/grundwissen/hall-effekt"},"Hall-Effekt"),"-Sensor auf dem Controllerboard des Zumo realisiert ist. Der Quadratur-Encoder hat eine Aufl\xf6sung von 12 Schritten pro Umdrehung."),(0,a.kt)("p",null,"Da die R\xe4der nicht direkt, sondern mit einem Getriebe  mit der Motorwelle verbunden sind (\xdcbersetzung 75.81:1), f\xfchrt das zu einer Aufl\xf6sung von ",(0,a.kt)("span",{parentName:"p",className:"math math-inline"},(0,a.kt)("span",{parentName:"span",className:"katex"},(0,a.kt)("span",{parentName:"span",className:"katex-mathml"},(0,a.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,a.kt)("semantics",{parentName:"math"},(0,a.kt)("mrow",{parentName:"semantics"},(0,a.kt)("mn",{parentName:"mrow"},"12"),(0,a.kt)("mo",{parentName:"mrow"},"\xd7"),(0,a.kt)("mn",{parentName:"mrow"},"75.81"),(0,a.kt)("mo",{parentName:"mrow"},"\u2248"),(0,a.kt)("mn",{parentName:"mrow"},"909"),(0,a.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,a.kt)("mn",{parentName:"mrow"},"7")),(0,a.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"12\\times 75.81 \\approx 909,7")))),(0,a.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,a.kt)("span",{parentName:"span",className:"base"},(0,a.kt)("span",{parentName:"span",className:"strut",style:{height:"0.7278em",verticalAlign:"-0.0833em"}}),(0,a.kt)("span",{parentName:"span",className:"mord"},"12"),(0,a.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.kt)("span",{parentName:"span",className:"mbin"},"\xd7"),(0,a.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,a.kt)("span",{parentName:"span",className:"base"},(0,a.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,a.kt)("span",{parentName:"span",className:"mord"},"75.81"),(0,a.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,a.kt)("span",{parentName:"span",className:"mrel"},"\u2248"),(0,a.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,a.kt)("span",{parentName:"span",className:"base"},(0,a.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8389em",verticalAlign:"-0.1944em"}}),(0,a.kt)("span",{parentName:"span",className:"mord"},"909"),(0,a.kt)("span",{parentName:"span",className:"mpunct"},","),(0,a.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,a.kt)("span",{parentName:"span",className:"mord"},"7")))))," Impulsen pro Radumdrehung (CPR - counts per revolution) oder ca. 0,128 mm zur\xfcckgelegter Strecke pro Impuls."),(0,a.kt)("h2",{id:"static-int-getcountsleft"},(0,a.kt)("inlineCode",{parentName:"h2"},"static int \tgetCountsLeft()")),(0,a.kt)("p",null,"Gibt die vom linken Encoder erkannte Anzahl von Impulses zur\xfcck. Die Z\xe4hlung beginnt mit null. Ein positiver R\xfcckgabewert entspricht einer Vorw\xe4rtsbewegung, ein negativer Wert einer R\xfcckw\xe4rtsbewegung des Roboters. "),(0,a.kt)("p",null,"Die Anazahl der Impulse werden als ",(0,a.kt)("inlineCode",{parentName:"p"},"int"),"-Wert zur\xfcckgegeben. \xdcberschreitet der Wert ",(0,a.kt)("inlineCode",{parentName:"p"},"32767"),", springt er auf ",(0,a.kt)("inlineCode",{parentName:"p"},"-32768")," und z\xe4hlt positiv weiter. Unterschreitet der Wert  ",(0,a.kt)("inlineCode",{parentName:"p"},"-32768"),", springt er auf ",(0,a.kt)("inlineCode",{parentName:"p"},"32767"),". Aus diesem Grund sollte darauf geachtete werden, dass die Encoderwerte regelm\xe4\xdfig abgefragt und zur\xfcckgesetzt werden."),(0,a.kt)("p",null,"Der Encoder wird durch einen Interrupt gesteuert, weshalb keine zus\xe4tzliche Funktion zum Bestimmen der Encoder-Impulse aufgerufen werden muss."),(0,a.kt)("h3",{id:"beispiel"},"Beispiel"),(0,a.kt)(s.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"3pi+",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-arduino"},"// Zeigt die Encoder-Werte auf dem Display an\n#include <Wire.h>\n#include <Pololu3piPlus32U4.h>\nusing namespace Pololu3piPlus32U4;\n\nEncoders encoders; //  Encoder-Objekt deklarieren\nLCD lcd;\n\nunsigned long lastDisplayTime = 0;\n\nvoid setup() {\n  // bleibt leer\n}\n\nvoid loop() {\n  if ((millis() - lastDisplayTime) >= 100) {\n\n    int countsLeft = encoders.getCountsLeft();   // Aufruf der getCountsLeft() Methode\n    int countsRight = encoders.getCountsRight(); // Aufruf der getCountsLeft() Methode\n\n    lcd.clear();\n    lcd.print(countsLeft);\n    lcd.gotoXY(0, 1);\n    lcd.print(countsRight);\n    \n    lastDisplayTime = millis();\n  }\n}\n"))),(0,a.kt)(i.Z,{value:"Zumo",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-arduino"},"// Zeigt die Encoder-Werte auf dem Display an\n\n#include <Wire.h>\n#include <Zumo32U4.h>\n\nZumo32U4Encoders encoders; //  Encoder-Objekt deklarieren\nZumo32U4LCD lcd;\n\nunsigned long lastDisplayTime = 0;\n\nvoid setup() {\n  // bleibt leer\n}\n\nvoid loop() {\n  if ((millis() - lastDisplayTime) >= 100) {\n\n    int countsLeft = encoders.getCountsLeft();   // Aufruf der getCountsLeft() Methode\n    int countsRight = encoders.getCountsRight(); // Aufruf der getCountsLeft() Methode\n\n    lcd.clear();\n    lcd.print(countsLeft);\n    lcd.gotoXY(0, 1);\n    lcd.print(countsRight);\n    \n    lastDisplayTime = millis();\n  }\n}\n")))),(0,a.kt)("h2",{id:"static-int-getcountsright"},(0,a.kt)("inlineCode",{parentName:"h2"},"static int \tgetCountsRight()")),(0,a.kt)("p",null,"Wie ",(0,a.kt)("inlineCode",{parentName:"p"},"getCountsLeft()")," nur f\xfcr das rechte Rad."),(0,a.kt)("h2",{id:"static-int-getcountsandresetleft"},(0,a.kt)("inlineCode",{parentName:"h2"},"static int \tgetCountsAndResetLeft()")),(0,a.kt)("p",null,"Verh\xe4lt sich wie ",(0,a.kt)("inlineCode",{parentName:"p"},"static int getCountsLeft()"),", au\xdfer dass vor jeder R\xfcckgabe des Wertes der Z\xe4hler auf Null gesetzt wird. Bei wiederkehrendem Aufruf von ",(0,a.kt)("inlineCode",{parentName:"p"},"getCountsAndResetLeft()")," wird alo die Anzahl der Encoder-Impulse zwischen zwei Aufrufen zur\xfcckgegeben und ein ungewollter \xdcberlauf des Z\xe4hlwertes vermieden."),(0,a.kt)("h2",{id:"static-int--getcountsandresetright"},(0,a.kt)("inlineCode",{parentName:"h2"},"static int  getCountsAndResetRight()")),(0,a.kt)("p",null,"Wie ",(0,a.kt)("inlineCode",{parentName:"p"},"getCountsAndResetRight()")," nur f\xfcr das rechte Rad."))}g.isMDXComponent=!0}}]);