"use strict";(self.webpackChunkspace_hal_2=self.webpackChunkspace_hal_2||[]).push([[4148],{8310:function(e,s,n){n.r(s),n.d(s,{contentTitle:function(){return h},default:function(){return w},frontMatter:function(){return y},metadata:function(){return u},toc:function(){return N}});var t=n(3117),a=n(102),r=n(7294),i=n(3905),o=n(3786),l=[{distance:0,sensor:0,symbol:0},{distance:0,sensor:0,symbol:0},{distance:0,sensor:0,symbol:0},{distance:.1,sensor:0,symbol:0},{distance:.2,sensor:5,symbol:0},{distance:.3,sensor:5,symbol:0},{distance:.5,sensor:5,symbol:0},{distance:.6,sensor:0,symbol:0},{distance:.7,sensor:5,symbol:0},{distance:.9,sensor:0,symbol:0},{distance:1,sensor:0,symbol:0},{distance:1.1,sensor:0,symbol:0},{distance:1.4,sensor:0,symbol:0},{distance:1.6,sensor:11,symbol:0},{distance:1.8,sensor:0,symbol:0},{distance:2,sensor:0,symbol:0},{distance:2.3,sensor:0,symbol:0},{distance:2.5,sensor:0,symbol:0},{distance:2.7,sensor:0,symbol:0},{distance:2.9,sensor:5,symbol:0},{distance:3.2,sensor:5,symbol:0},{distance:3.6,sensor:0,symbol:0},{distance:3.8,sensor:0,symbol:0},{distance:4.1,sensor:39,symbol:0},{distance:4.3,sensor:39,symbol:0},{distance:4.6,sensor:39,symbol:0},{distance:4.9,sensor:50,symbol:0},{distance:5.1,sensor:61,symbol:0},{distance:5.4,sensor:84,symbol:0},{distance:5.6,sensor:89,symbol:0},{distance:5.9,sensor:95,symbol:0},{distance:6.1,sensor:140,symbol:0},{distance:6.4,sensor:134,symbol:0},{distance:6.8,sensor:191,symbol:0},{distance:7.2,sensor:230,symbol:0},{distance:7.4,sensor:258,symbol:1e3},{distance:7.8,sensor:280,symbol:1e3},{distance:8.1,sensor:325,symbol:1e3},{distance:8.3,sensor:393,symbol:1e3},{distance:8.6,sensor:483,symbol:1e3},{distance:8.9,sensor:528,symbol:1e3},{distance:9.1,sensor:623,symbol:1e3},{distance:9.4,sensor:685,symbol:1e3},{distance:9.8,sensor:786,symbol:1e3},{distance:10,sensor:831,symbol:1e3},{distance:10.4,sensor:870,symbol:1e3},{distance:10.7,sensor:921,symbol:1e3},{distance:11,sensor:938,symbol:1e3},{distance:11.3,sensor:960,symbol:1e3},{distance:11.7,sensor:977,symbol:1e3},{distance:11.9,sensor:977,symbol:1e3},{distance:12.2,sensor:977,symbol:1e3},{distance:12.6,sensor:966,symbol:1e3},{distance:12.9,sensor:971,symbol:1e3},{distance:13.2,sensor:971,symbol:1e3},{distance:13.6,sensor:1e3,symbol:1e3},{distance:13.9,sensor:966,symbol:1e3},{distance:14.1,sensor:1e3,symbol:1e3},{distance:14.5,sensor:983,symbol:1e3},{distance:14.8,sensor:971,symbol:1e3},{distance:15.2,sensor:1e3,symbol:1e3},{distance:15.4,sensor:1e3,symbol:1e3},{distance:15.8,sensor:938,symbol:1e3},{distance:16.2,sensor:870,symbol:1e3},{distance:16.5,sensor:808,symbol:1e3},{distance:16.8,sensor:747,symbol:1e3},{distance:17.2,sensor:674,symbol:1e3},{distance:17.5,sensor:617,symbol:1e3},{distance:17.9,sensor:522,symbol:1e3},{distance:18.1,sensor:477,symbol:1e3},{distance:18.5,sensor:426,symbol:1e3},{distance:18.8,sensor:376,symbol:1e3},{distance:19,sensor:325,symbol:1e3},{distance:19.4,sensor:247,symbol:0},{distance:19.7,sensor:235,symbol:0},{distance:19.9,sensor:185,symbol:0},{distance:20.3,sensor:179,symbol:0},{distance:20.6,sensor:134,symbol:0},{distance:20.8,sensor:162,symbol:0},{distance:21.2,sensor:134,symbol:0},{distance:21.5,sensor:84,symbol:0},{distance:21.9,sensor:101,symbol:0},{distance:22.3,sensor:50,symbol:0},{distance:22.5,sensor:39,symbol:0},{distance:22.8,sensor:39,symbol:0},{distance:23,sensor:39,symbol:0},{distance:23.4,sensor:39,symbol:0},{distance:23.7,sensor:0,symbol:0},{distance:24.1,sensor:0,symbol:0},{distance:24.5,sensor:0,symbol:0},{distance:24.7,sensor:0,symbol:0},{distance:25.1,sensor:11,symbol:0},{distance:25.4,sensor:0,symbol:0},{distance:25.6,sensor:0,symbol:0},{distance:26,sensor:0,symbol:0},{distance:26.3,sensor:0,symbol:0},{distance:26.7,sensor:0,symbol:0},{distance:26.9,sensor:11,symbol:0},{distance:27.2,sensor:5,symbol:0},{distance:27.4,sensor:0,symbol:0},{distance:27.7,sensor:5,symbol:0},{distance:27.9,sensor:11,symbol:0},{distance:28.2,sensor:0,symbol:0},{distance:28.5,sensor:0,symbol:0},{distance:28.8,sensor:0,symbol:0},{distance:29.1,sensor:5,symbol:0},{distance:29.5,sensor:0,symbol:0},{distance:29.7,sensor:5,symbol:0},{distance:30.1,sensor:0,symbol:0},{distance:30.4,sensor:0,symbol:0},{distance:30.8,sensor:0,symbol:0},{distance:31.2,sensor:5,symbol:0},{distance:31.4,sensor:0,symbol:0},{distance:31.7,sensor:0,symbol:0},{distance:32.1,sensor:0,symbol:0},{distance:32.3,sensor:0,symbol:0},{distance:32.7,sensor:0,symbol:0},{distance:33,sensor:16,symbol:0},{distance:33.4,sensor:5,symbol:0},{distance:33.7,sensor:0,symbol:0},{distance:34,sensor:5,symbol:0},{distance:34.4,sensor:0,symbol:0},{distance:34.7,sensor:0,symbol:0},{distance:34.9,sensor:0,symbol:0},{distance:35.3,sensor:0,symbol:0},{distance:35.6,sensor:0,symbol:0},{distance:35.8,sensor:5,symbol:0},{distance:36.2,sensor:0,symbol:0},{distance:36.5,sensor:5,symbol:0},{distance:36.7,sensor:0,symbol:0},{distance:37.1,sensor:0,symbol:0},{distance:37.4,sensor:0,symbol:0},{distance:37.6,sensor:16,symbol:0},{distance:38,sensor:0,symbol:0},{distance:38.3,sensor:0,symbol:0},{distance:38.5,sensor:0,symbol:0},{distance:38.8,sensor:0,symbol:0},{distance:39.2,sensor:0,symbol:0},{distance:39.4,sensor:0,symbol:0},{distance:39.7,sensor:0,symbol:0},{distance:40.1,sensor:0,symbol:0},{distance:40.3,sensor:0,symbol:0},{distance:40.6,sensor:5,symbol:0},{distance:41,sensor:0,symbol:0},{distance:41.2,sensor:0,symbol:0},{distance:41.5,sensor:0,symbol:0},{distance:41.9,sensor:0,symbol:0},{distance:42.1,sensor:0,symbol:0},{distance:42.5,sensor:0,symbol:0},{distance:42.9,sensor:0,symbol:0},{distance:43.2,sensor:5,symbol:0},{distance:43.6,sensor:0,symbol:0},{distance:43.8,sensor:44,symbol:0},{distance:44.2,sensor:39,symbol:0},{distance:44.5,sensor:5,symbol:0},{distance:44.7,sensor:39,symbol:0},{distance:45.1,sensor:50,symbol:0},{distance:45.4,sensor:39,symbol:0},{distance:45.6,sensor:50,symbol:0},{distance:46,sensor:50,symbol:0},{distance:46.4,sensor:84,symbol:0},{distance:46.6,sensor:89,symbol:0},{distance:47,sensor:95,symbol:0},{distance:47.4,sensor:95,symbol:0},{distance:47.8,sensor:146,symbol:0},{distance:48.1,sensor:134,symbol:0},{distance:48.5,sensor:146,symbol:0},{distance:48.8,sensor:151,symbol:0},{distance:49.2,sensor:230,symbol:0},{distance:49.5,sensor:230,symbol:0},{distance:49.9,sensor:286,symbol:1e3},{distance:50.3,sensor:337,symbol:1e3},{distance:50.5,sensor:421,symbol:1e3},{distance:50.8,sensor:455,symbol:1e3},{distance:51.2,sensor:550,symbol:1e3},{distance:51.6,sensor:589,symbol:1e3},{distance:51.8,sensor:679,symbol:1e3},{distance:52.1,sensor:780,symbol:1e3},{distance:52.5,sensor:837,symbol:1e3},{distance:52.8,sensor:870,symbol:1e3},{distance:53.1,sensor:921,symbol:1e3},{distance:53.5,sensor:977,symbol:1e3},{distance:53.9,sensor:983,symbol:1e3},{distance:54.3,sensor:977,symbol:1e3},{distance:54.5,sensor:971,symbol:1e3},{distance:54.8,sensor:1e3,symbol:1e3},{distance:55.2,sensor:971,symbol:1e3},{distance:55.5,sensor:1e3,symbol:1e3},{distance:55.9,sensor:1e3,symbol:1e3},{distance:56.2,sensor:1e3,symbol:1e3},{distance:56.6,sensor:1e3,symbol:1e3},{distance:57,sensor:1e3,symbol:1e3},{distance:57.4,sensor:1e3,symbol:1e3},{distance:57.7,sensor:1e3,symbol:1e3},{distance:58,sensor:1e3,symbol:1e3},{distance:58.4,sensor:1e3,symbol:1e3},{distance:58.6,sensor:1e3,symbol:1e3},{distance:59,sensor:1e3,symbol:1e3},{distance:59.4,sensor:1e3,symbol:1e3},{distance:59.7,sensor:1e3,symbol:1e3},{distance:60.1,sensor:1e3,symbol:1e3},{distance:60.5,sensor:1e3,symbol:1e3},{distance:60.8,sensor:1e3,symbol:1e3},{distance:61.2,sensor:1e3,symbol:1e3},{distance:61.5,sensor:1e3,symbol:1e3},{distance:61.7,sensor:1e3,symbol:1e3},{distance:62.1,sensor:1e3,symbol:1e3},{distance:62.5,sensor:1e3,symbol:1e3},{distance:62.9,sensor:1e3,symbol:1e3},{distance:63.3,sensor:1e3,symbol:1e3},{distance:63.5,sensor:1e3,symbol:1e3},{distance:63.9,sensor:1e3,symbol:1e3},{distance:64.3,sensor:1e3,symbol:1e3},{distance:64.6,sensor:1e3,symbol:1e3},{distance:65,sensor:1e3,symbol:1e3},{distance:65.2,sensor:1e3,symbol:1e3},{distance:65.6,sensor:1e3,symbol:1e3},{distance:66,sensor:1e3,symbol:1e3},{distance:66.4,sensor:1e3,symbol:1e3},{distance:66.8,sensor:1e3,symbol:1e3},{distance:67,sensor:1e3,symbol:1e3},{distance:67.3,sensor:1e3,symbol:1e3},{distance:67.7,sensor:1e3,symbol:1e3},{distance:68.1,sensor:1e3,symbol:1e3},{distance:68.4,sensor:1e3,symbol:1e3},{distance:68.8,sensor:1e3,symbol:1e3},{distance:69.2,sensor:1e3,symbol:1e3},{distance:69.5,sensor:1e3,symbol:1e3},{distance:69.9,sensor:1e3,symbol:1e3},{distance:70.3,sensor:1e3,symbol:1e3},{distance:70.5,sensor:1e3,symbol:1e3},{distance:70.8,sensor:1e3,symbol:1e3},{distance:71.2,sensor:1e3,symbol:1e3},{distance:71.5,sensor:983,symbol:1e3},{distance:71.8,sensor:1e3,symbol:1e3},{distance:72.2,sensor:983,symbol:1e3},{distance:72.6,sensor:988,symbol:1e3},{distance:73,sensor:971,symbol:1e3},{distance:73.2,sensor:904,symbol:1e3},{distance:73.6,sensor:831,symbol:1e3},{distance:74,sensor:780,symbol:1e3},{distance:74.4,sensor:713,symbol:1e3},{distance:74.6,sensor:662,symbol:1e3},{distance:75,sensor:595,symbol:1e3},{distance:75.4,sensor:505,symbol:1e3},{distance:75.7,sensor:471,symbol:1e3},{distance:76.1,sensor:387,symbol:1e3},{distance:76.3,sensor:342,symbol:1e3},{distance:76.7,sensor:297,symbol:1e3},{distance:77,sensor:230,symbol:0},{distance:77.3,sensor:185,symbol:0},{distance:77.6,sensor:179,symbol:0},{distance:78,sensor:146,symbol:0},{distance:78.4,sensor:129,symbol:0},{distance:78.8,sensor:84,symbol:0},{distance:79,sensor:101,symbol:0},{distance:79.3,sensor:39,symbol:0},{distance:79.7,sensor:39,symbol:0},{distance:79.9,sensor:44,symbol:0},{distance:80.3,sensor:39,symbol:0},{distance:80.7,sensor:16,symbol:0},{distance:81,sensor:5,symbol:0},{distance:81.3,sensor:0,symbol:0},{distance:81.7,sensor:0,symbol:0},{distance:82,sensor:0,symbol:0},{distance:82.4,sensor:0,symbol:0},{distance:82.6,sensor:0,symbol:0},{distance:83,sensor:0,symbol:0},{distance:83.3,sensor:0,symbol:0},{distance:83.5,sensor:0,symbol:0},{distance:83.9,sensor:11,symbol:0},{distance:84.3,sensor:0,symbol:0},{distance:84.6,sensor:5,symbol:0},{distance:85,sensor:0,symbol:0},{distance:85.3,sensor:5,symbol:0},{distance:85.7,sensor:0,symbol:0},{distance:86,sensor:5,symbol:0},{distance:86.4,sensor:0,symbol:0},{distance:86.6,sensor:0,symbol:0},{distance:86.9,sensor:0,symbol:0},{distance:87.3,sensor:0,symbol:0},{distance:87.7,sensor:5,symbol:0},{distance:87.9,sensor:0,symbol:0},{distance:88.2,sensor:0,symbol:0},{distance:88.6,sensor:0,symbol:0},{distance:89,sensor:0,symbol:0},{distance:89.3,sensor:0,symbol:0},{distance:89.6,sensor:0,symbol:0},{distance:90,sensor:0,symbol:0}],d=["#4e4752","#D62828","#39998f","#bd86a8"];o.kL.defaults.font.size=15,o.kL.defaults.color="black",o.kL.defaults.font.family="Avenir",o.kL.defaults.elements.point=0,o.kL.defaults.datasets.cubicInterpolationMode="monotone",o.kL.defaults.plugins.legend.align="end";var m=2e3/l.length,c={parsing:{xAxisKey:"distance"},animation:{x:{type:"number",easing:"linear",duration:m,from:NaN,delay:function(e){return"data"!==e.type||e.xStarted?0:(e.xStarted=!0,e.index*m)}},y:{type:"number",easing:"linear",duration:m,from:function(e){return 0===e.index?e.chart.scales.y.getPixelForValue(100):e.chart.getDatasetMeta(e.datasetIndex).data[e.index-1].getProps(["y"],!0).y},delay:function(e){return"data"!==e.type||e.yStarted?0:(e.yStarted=!0,e.index*m)}}},interaction:{intersect:!1},responsive:!0,plugins:{filler:{propagate:!0},legend:{position:"top",font:{weight:"normal"},labels:{boxWidth:15,boxHeight:10}},title:{position:"bottom",display:!0,text:"Auslesen eines Barcodes mit dem Bodensensor (Symbolbreite 1,5 cm)",font:{weight:"normal"}},tooltip:{backgroundColor:"rgba(255, 255, 255, 0.7)",titleColor:"#474747",bodyColor:"#474747",cornerRadius:2,displayColors:!1,borderColor:"#474747",borderWidth:1}},scales:{x:{type:"linear",grid:{borderWidth:1,borderColor:"black",drawBorder:!1,color:function(e){return 0===e.tick.value?"Black":"LightGrey"},lineWidth:function(e){return 0===e.tick.value?1:.5},drawTicks:!1},ticks:{stepSize:10,min:0,max:85},title:{display:!0,text:"Strecke in mm",align:"center",font:{weight:"italic"}}},y:{grid:{borderWidth:1,borderColor:"black",drawBorder:!1,color:function(e){return 0===e.tick.value?"Black":"LightGrey"},lineWidth:function(e){return 0===e.tick.value?1:.5},drawTicks:!1},ticks:{min:0,max:1005,stepSize:250,beginAtZero:!0},title:{display:!1,text:"Sensorwert",align:"center",font:{weight:"italic"}},offset:!1,beginAtZero:!0}},datasets:{line:{borderWidth:2}}},p={type:"line",data:{datasets:[{label:"Bodensensor",data:l,hidden:!1,cubicInterpolationMode:"monotone",borderColor:d[1],backgroundColor:d[1],borderWidth:2.5,parsing:{yAxisKey:"sensor"}},{label:"Schwellwerterkennung",hidden:!0,data:l,cubicInterpolationMode:"monotone",borderColor:"rgba(0, 0, 0,0.7)",backgroundColor:d[0],borderWidth:2,fill:{target:"origin",above:"rgba(0, 0, 0,0.06)",below:"rgba(200, 200, 200,0.06)"},parsing:{yAxisKey:"symbol"}}]}},b=function(){return r.createElement("div",{className:"chartwrappersmall"},r.createElement(o.x1,{data:p.data,options:c,width:100,height:50}))},k=["components"],y={id:"botBarcode",title:"Mit dem Roboter einen Strichcode dekodieren",sidebar_label:"Anwendung: Barcode",description:"Mit einem Linienfolger einen Barcode (Strichcode) dekodieren.",custom_edit_url:null,keywords:["Roboter","Linienfolger","Barcode","Strichcode","dekodieren","Bin\xe4rzahlen","Dualzahlen"]},h=void 0,u={unversionedId:"robotik/botBarcode",id:"robotik/botBarcode",title:"Mit dem Roboter einen Strichcode dekodieren",description:"Mit einem Linienfolger einen Barcode (Strichcode) dekodieren.",source:"@site/docs/robotik/barcode.md",sourceDirName:"robotik",slug:"/robotik/botBarcode",permalink:"/docs/robotik/botBarcode",editUrl:null,tags:[],version:"current",lastUpdatedAt:1641119333,formattedLastUpdatedAt:"2.1.2022",frontMatter:{id:"botBarcode",title:"Mit dem Roboter einen Strichcode dekodieren",sidebar_label:"Anwendung: Barcode",description:"Mit einem Linienfolger einen Barcode (Strichcode) dekodieren.",custom_edit_url:null,keywords:["Roboter","Linienfolger","Barcode","Strichcode","dekodieren","Bin\xe4rzahlen","Dualzahlen"]},sidebar:"sideBarRobotik",previous:{title:"Geschwindigkeitsregler",permalink:"/docs/robotik/speedControl"},next:{title:"Odometrie",permalink:"/docs/robotik/odometrie"}},N=[{value:"Barcodes",id:"barcodes",children:[],level:2},{value:"Dualzahlen",id:"dualzahlen",children:[],level:2},{value:"Ein Strichcode f\xfcr den Roboter",id:"ein-strichcode-f\xfcr-den-roboter",children:[],level:2},{value:"Auslesen mit den Bodensensoren",id:"auslesen-mit-den-bodensensoren",children:[],level:2},{value:"Dekodieren des Strichcodes",id:"dekodieren-des-strichcodes",children:[],level:2},{value:"Barcode in Dezimalzahl umwandeln",id:"barcode-in-dezimalzahl-umwandeln",children:[],level:2},{value:"Nicht-blockierender Dekoder (Mulitasking)",id:"nicht-blockierender-dekoder-mulitasking",children:[],level:2},{value:"Links",id:"links",children:[],level:2}],g={toc:N};function w(e){var s=e.components,n=(0,a.Z)(e,k);return(0,i.kt)("wrapper",(0,t.Z)({},g,n,{components:s,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"UNDER CONSTRUCTION")),(0,i.kt)("h2",{id:"barcodes"},"Barcodes"),(0,i.kt)("p",null,"Ein ",(0,i.kt)("a",{parentName:"p",href:"https://de.wikipedia.org/wiki/Strichcode"},"Strichcode")," ist eine Anordnung von verschieden breiten parallelen Strichen und L\xfccken, in welchen eine ",(0,i.kt)("a",{parentName:"p",href:"https://de.wikipedia.org/wiki/Dualsystem"},"Dualzahl")," codiert ist. Barcodes, wie Strichcodes auch genannt werden, lassen sich nicht nur im Supermarkt auf Etiketten finden, sondern \xfcberall dort, wo eine einfach anzubringende und von Maschinen lesbare ",(0,i.kt)("em",{parentName:"p"},"Schrift")," ben\xf6tigt wird (z.B. ISBN-Nummer auf B\xfcchern, Adressen auf Postsendungen, Identifikation von Gep\xe4ckst\xfccken, Pharmazeutika, etc.). "),(0,i.kt)("p",null,"Auch die inzwischen weitverbreiteten ",(0,i.kt)("a",{parentName:"p",href:"https://de.wikipedia.org/wiki/QR-Code"},"QR-Codes")," codieren Informationen mit schwarzen und wei\xdfen Feldern. Im Unterschied zum einfachen Strichcode werden hier aber die Informationen zweidimensional mit schwarzen und wei\xdfen Quadraten gespeichert. Dadurch erreichen QR-Codes eine deutlichen h\xf6heren Informationsgehalt von bis zu 3 kByte (2.956 Byte)."),(0,i.kt)("h2",{id:"dualzahlen"},"Dualzahlen"),(0,i.kt)("p",null,"In einem Strichcode werden Daten oft in Dualzahlen gespeichert, da sie nur aus den Ziffern 0 und 1 bestehen. \xc4hnlich wie bei den Dezimalzahlen hat jede Stelle bei einer Dualzahl eine andere Wertigkeit. W\xe4hrend die ",(0,i.kt)("strong",{parentName:"p"},"Wertigkeit")," der Stellen bei Dezimalzahlen auf der Basis 10 beruht (Einer-, Zehner-, Hunderter-, Tausender-Stelle) beruht die Wertigkeit der Dualstellen auf der Basis 2. F\xfcr die kleinste Stelle folgt somit eine Wertigkeit von ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("msup",{parentName:"mrow"},(0,i.kt)("mn",{parentName:"msup"},"2"),(0,i.kt)("mn",{parentName:"msup"},"0")),(0,i.kt)("mo",{parentName:"mrow"},"="),(0,i.kt)("mn",{parentName:"mrow"},"1")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"2^0 = 1")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8141079999999999em",verticalAlign:"0em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord"},"2"),(0,i.kt)("span",{parentName:"span",className:"msupsub"},(0,i.kt)("span",{parentName:"span",className:"vlist-t"},(0,i.kt)("span",{parentName:"span",className:"vlist-r"},(0,i.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141079999999999em"}},(0,i.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,i.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,i.kt)("span",{parentName:"span",className:"mord mtight"},"0")))))))),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,i.kt)("span",{parentName:"span",className:"mrel"},"="),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},"1"))))),". Die n\xe4chst h\xf6here Stelle weist eine Wertigkeit von ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("msup",{parentName:"mrow"},(0,i.kt)("mn",{parentName:"msup"},"2"),(0,i.kt)("mn",{parentName:"msup"},"1")),(0,i.kt)("mo",{parentName:"mrow"},"="),(0,i.kt)("mn",{parentName:"mrow"},"2")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"2^1 = 2")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8141079999999999em",verticalAlign:"0em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord"},"2"),(0,i.kt)("span",{parentName:"span",className:"msupsub"},(0,i.kt)("span",{parentName:"span",className:"vlist-t"},(0,i.kt)("span",{parentName:"span",className:"vlist-r"},(0,i.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141079999999999em"}},(0,i.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,i.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,i.kt)("span",{parentName:"span",className:"mord mtight"},"1")))))))),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,i.kt)("span",{parentName:"span",className:"mrel"},"="),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},"2")))))," auf. Dann folgen die Wertigkeiten ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("msup",{parentName:"mrow"},(0,i.kt)("mn",{parentName:"msup"},"2"),(0,i.kt)("mn",{parentName:"msup"},"2")),(0,i.kt)("mo",{parentName:"mrow"},"="),(0,i.kt)("mn",{parentName:"mrow"},"4")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"2^2=4")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8141079999999999em",verticalAlign:"0em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord"},"2"),(0,i.kt)("span",{parentName:"span",className:"msupsub"},(0,i.kt)("span",{parentName:"span",className:"vlist-t"},(0,i.kt)("span",{parentName:"span",className:"vlist-r"},(0,i.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141079999999999em"}},(0,i.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,i.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,i.kt)("span",{parentName:"span",className:"mord mtight"},"2")))))))),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,i.kt)("span",{parentName:"span",className:"mrel"},"="),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},"4"))))),", ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("msup",{parentName:"mrow"},(0,i.kt)("mn",{parentName:"msup"},"2"),(0,i.kt)("mn",{parentName:"msup"},"3")),(0,i.kt)("mo",{parentName:"mrow"},"="),(0,i.kt)("mn",{parentName:"mrow"},"8")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"2^3=8")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8141079999999999em",verticalAlign:"0em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord"},"2"),(0,i.kt)("span",{parentName:"span",className:"msupsub"},(0,i.kt)("span",{parentName:"span",className:"vlist-t"},(0,i.kt)("span",{parentName:"span",className:"vlist-r"},(0,i.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141079999999999em"}},(0,i.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,i.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,i.kt)("span",{parentName:"span",className:"mord mtight"},"3")))))))),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,i.kt)("span",{parentName:"span",className:"mrel"},"="),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},"8"))))),", usw."),(0,i.kt)("img",{src:"/img/robotik/Dualzahlen.png",alt:"Umwandlung einer Dualzahl",width:"290px",className:"center"}),(0,i.kt)("p",null,"Soll eine Dualzahl in eine Dezimalzahl ",(0,i.kt)("strong",{parentName:"p"},"umgewandelt")," werden, muss jede Stelle der Dualzahl mit ihrer entsprechenden Wertigkeit multipliziert und anschlie\xdfend alle Werte aufaddiert werden. In obiger Abbildung ist beispielhaft die Umwandlung der Dualzahl ",(0,i.kt)("inlineCode",{parentName:"p"},"1101")," in die Dezimalzahl 13 dargestellt."),(0,i.kt)("h2",{id:"ein-strichcode-f\xfcr-den-roboter"},"Ein Strichcode f\xfcr den Roboter"),(0,i.kt)("p",null,"In einem einfachen Strichcode steht eine wei\xdfe Linie f\xfcr eine ",(0,i.kt)("inlineCode",{parentName:"p"},"0")," und eine schwarze Linie steht f\xfcr eine ",(0,i.kt)("inlineCode",{parentName:"p"},"1"),". In dem unten aufgef\xfchrten Beispiel bilden 5 Striche eine Dualzahl aus 5 Stellen (man sagt auch 5 Bit Dualzahl). Aus der Strichfolge ergibt sich dabei die Zahl ",(0,i.kt)("inlineCode",{parentName:"p"},"10011"),". "),(0,i.kt)("p",null,"Im Prinzip ist jede beliebige Kombination von wei\xdfen und schwarzen Strichen m\xf6glich, wobei jedoch der erste Strich immer schwarz sein muss. Dieser erste schwarze Strich ist das ",(0,i.kt)("strong",{parentName:"p"},"Synchronisierungsbit")," (Sync-Bit), welches notwendig ist, damit der Roboter erkennen kann, wann der Strichcode beginnt. Dementsprechend speichert ein 5 Bit langer Strichcode nur 4 Bit an Informationen, womit sich Dezimalzahlen von 0 bis 15 darstellen lassen."),(0,i.kt)("img",{src:"/img/robotik/BarCodeBot.png",alt:"Einfacher Strichcode f\xfcr einen Roboter",width:"470px",className:"center"}),(0,i.kt)("p",null,"Bei der Umwandlung der sich aus dem Strichcode ergebenden Dualzahl in eine Dezimalzahl ist die Reihenfolge der Bits wichtig. F\xfcr den hier verwenden Barcode wird festgelegt, dass das erste Bit nach dem Sync-Bit die h\xf6chste Wertigkeit hat. Das Sync-Bit selbst wird bei der Umwandlung in eine Dezimalzahl nicht ber\xfccksichtigt.",(0,i.kt)("br",{parentName:"p"}),"\n","F\xfcr das obige Beispiel ergibt sich ohne Sync-Bit die Bitfolge ",(0,i.kt)("inlineCode",{parentName:"p"},"0011"),", was der Dezimalzahl ",(0,i.kt)("inlineCode",{parentName:"p"},"3")," entspricht."),(0,i.kt)("h2",{id:"auslesen-mit-den-bodensensoren"},"Auslesen mit den Bodensensoren"),(0,i.kt)("p",null,"Das Auslesen des Barcodes geschieht durch den Bodensensor des Roboters. Der unten dargestellte Signalverlauf des Bodensensors ergibt sich, wenn der Zumo Roboter \xfcber \xfcber einen 5 Bit Strichcode mit dem Wert (Bits) ",(0,i.kt)("inlineCode",{parentName:"p"},"10011")," f\xe4hrt. Die auf der x- Achse angegebene zur\xfcckgelegte Strecke wird dabei mit dem Motorencoder bestimmt und ist sp\xe4ter f\xfcr die Dekodierung wichtig."),(0,i.kt)(b,{mdxType:"LineChart"}),(0,i.kt)("p",null,"Im Diagramm ist neben dem Verlauf des Bodensensors auch die ",(0,i.kt)("strong",{parentName:"p"},"Erkennung des Schwellwertes")," abgebildet. Ist der ermittelte Sensorwert gr\xf6\xdfer als der gegebene Schwellwert (",(0,i.kt)("inlineCode",{parentName:"p"},"einsLevel = 250"),"), so wird das in dem Verlauf der Schwellwerterkennung optisch dargestellt."),(0,i.kt)("details",{className:"ueben"}," ",(0,i.kt)("summary",null,"Aufgaben"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Lesen")," Sie mit dem Roboter einen ",(0,i.kt)("strong",{parentName:"p"},"Strichcode")," ein. Schreiben Sie hierzu ein Programm mit folgenden Eigenschaften:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Der Roboter f\xe4hrt zuerst nur geradeaus."),(0,i.kt)("li",{parentName:"ul"},"Nachdem das ",(0,i.kt)("strong",{parentName:"li"},"Sync-Bit")," erkannt wurde, soll der Roboter mit dem Motorencoder bis zum Ende des Strichcodes fahren."),(0,i.kt)("li",{parentName:"ul"},"W\xe4hrend er \xfcber den Strichcode f\xe4hrt, gibt der Roboter \xfcber die serielle Schnittstelle die Werte des mittleren ",(0,i.kt)("strong",{parentName:"li"},"Bodensensors")," aus."),(0,i.kt)("li",{parentName:"ul"},"Am Ende des Strichcodes bleibt der Roboter stehen.  ")),(0,i.kt)("p",{parentName:"li"},"Verwenden Sie folgende Konstanten f\xfcr Ihr Programm und \xfcberlegen Sie sich geeignete Wert:  "),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"#define mmProImpuls 0.128              // Aufl\xf6sung des Motorencoders in Millimeter pro Impuls\n\nconst int barcodeSensor = 2;           // Index des auszuwertenden Sensors\nconst int anzahlBits    = 5;           // L\xe4nge des Barcodes in Bits (inkl. Sync-Bit)\n\nconst int einsLevel            = /* ??? */;                         // Schwelle zur Erkennung des Sync-Bits\nconst int symbolBreite         = /* ??? */;                         // Strichbreite in mm\nconst int symbolBreiteInTicks  = symbolBreite / mmPerTick;          // Strichbreite in Encoder-Impulsen\nconst int barcodeLaengeInTicks = anzahlBits * symbolBreiteInTicks;  // L\xe4nge des Barcodes in Motorimpulsen\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Erweitern Sie das Programm aus der letzten Aufgabe um eine ",(0,i.kt)("strong",{parentName:"p"},"Schwellwerterkennung")," der logischen ",(0,i.kt)("inlineCode",{parentName:"p"},"1")," bzw. der logischen ",(0,i.kt)("inlineCode",{parentName:"p"},"0"),".  "),(0,i.kt)("p",{parentName:"li"},"Wenn der Sensorwert den Schwellwert ",(0,i.kt)("inlineCode",{parentName:"p"},"einsLevel")," \xfcberschreitet, soll die Variable ",(0,i.kt)("inlineCode",{parentName:"p"},"sensorZustand")," den Wert ",(0,i.kt)("inlineCode",{parentName:"p"},"1000")," annehmen, ansonsten soll sie den Wert ",(0,i.kt)("inlineCode",{parentName:"p"},"0")," annehmen. W\xe4hlen Sie f\xfcr den Schwellwert ",(0,i.kt)("inlineCode",{parentName:"p"},"einsLevel")," einen geeigneten Wert."),(0,i.kt)("p",{parentName:"li"}," Geben Sie auf dem seriellen Monitor durch ein Komma getrennt, sowohl den Sensorwert als auch die Variable ",(0,i.kt)("inlineCode",{parentName:"p"},"sensorZustand")," aus. Mit dem seriellen Plotter kann dann der ",(0,i.kt)("strong",{parentName:"p"},"Verlauf von beiden Werte")," angezeigt werden."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'// Ausgabe der beiden Werte zur korrekten Darstellung mit dem seriellen Plotter\nserial.print(sensorWert); Serial.print(", "); serial.println(schwellwertErkennung);\n'))))),(0,i.kt)("h2",{id:"dekodieren-des-strichcodes"},"Dekodieren des Strichcodes"),(0,i.kt)("p",null,"Soll der Barcode mit dem Bodensensor nicht nur ausgelesen, sondern auch in die entsprechenden Bits umgewandelt werden, muss der Strichcode mit dem Bodensensor an ",(0,i.kt)("strong",{parentName:"p"},"bestimmten Punkten abgetastet")," werden. Ist der Sensorwert an den Abtastpunkten gr\xf6\xdfer als der Schwellwert, w\xfcrde das einer ",(0,i.kt)("inlineCode",{parentName:"p"},"1")," entsprechen. Die Abtastung findet sinnvollerweise genau einmal pro Strich jeweils in der Mitte statt."),(0,i.kt)("p",null,"Ein Programm, welches einen Barcode dekodiert, also die einzelnen Bits des Codes erkennt, muss im wesentlichen Folgendes leisten:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Der ",(0,i.kt)("strong",{parentName:"li"},"Sensor")," zum Erkennen des Sync-Bits muss anfangs kontinuierlich ",(0,i.kt)("strong",{parentName:"li"},"ausgelesen")," werden."),(0,i.kt)("li",{parentName:"ol"},"Wenn das ",(0,i.kt)("strong",{parentName:"li"},"Sync-Bit erkannt")," wurde, beginnt die Dekodierung.",(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"Kurz nach dem Erkennen des ",(0,i.kt)("strong",{parentName:"li"},"Sync-Bits")," wird dieses ",(0,i.kt)("strong",{parentName:"li"},"abgetastet")," (1. Bit). Es wird \xfcberpr\xfcft, ob der Sensorwert gr\xf6\xdfer als der Schwellwert ist."),(0,i.kt)("li",{parentName:"ol"},"In einem, der Symbolbreite entsprechedem Intervall, wird jedes ",(0,i.kt)("strong",{parentName:"li"},"weitere Bit abgetastet")," (2. bis 5. Bit)."))),(0,i.kt)("li",{parentName:"ol"},"Die Dekodierung wird am Ende des Barcodes, zum Beispiel nach 5 Bits, beendet.")),(0,i.kt)("img",{src:"/img/robotik/BarCodeSignal.png",alt:"Barcode detektieren",width:"580px",className:"center"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-arduino"},"#define mmProImpuls 0.128              // Aufl\xf6sung des Motorencoders in Millimeter pro Impuls\n\nconst int barcodeSensor = 2;           // Index des auszuwertenden Sensors\nconst int anzahlBits    = 5;           // L\xe4nge des Barcodes in Bits (inkl. Sync-Bit)\n\nconst int einsLevel            = /* ??? */;                         // Schwelle zur Erkennung des Sync-Bits\nconst int symbolBreite         = /* ??? */;                         // Strichbreite in mm\nconst int symbolBreiteInTicks  = symbolBreite / mmPerTick;          // Strichbreite in Encoder-Impulsen\nconst int barcodeLaengeInTicks = anzahlBits * symbolBreiteInTicks;  // L\xe4nge des Barcodes in Motorimpulsen\nconst int offsetAbtastung      = /* ??? */;                         // Verschiebung des Abtastpunkt in Encoder-Impulsen\n\nbool datenBarcode[5] = {0,0,0,0,0};    // Array f\xfcr dekodierte Barcode Bits\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-arduino"},"/* Hauptstruktur des Strichcode-Dekodierers*/\nvoid loop()\n{\n  lineSensors.readCalibrated(linienSensorWerte);   // Sensorwerte lesen des Zumo 32u4 lesen\n  int sensorWert = linienSensorWerte[indexSensor];\n  if ( sensorWert > einsLevel) {\n    abtastenBarcode();                             // Der Barcode wird abgetastet und in  Bits umgewandelt\n\n    motors.setSpeeds(0, 0);\n    buttonA.waitForButton();\n  }\n}\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"// Abtasten des Barcodes. Erkennung des Sync-Bits wird separat durchgef\xfchrt\nvoid abtastenBarcode(){\n  int bitIndex        = 0;           // Index des aktuellen Bits des Barcodes\n  int abtastpunkt     = 0;           // Zum Debuggen. Wird am Abtastpunkten `1000`, ansonsten `0`\n  ledRed(1); ledGreen(0);\n\n  int encoderTicks    = 0;           \n  encoders.getCountsAndResetLeft();  // Motorencoder zur\xfccksetzen\n  encoders.getCountsAndResetRight(); // Motorencoder zur\xfccksetzen\n\n  // \xdcber die L\xe4nge des Barcodes die einzelnen Bits abtasten.\n  while (encoderTicks < barcodeLaengeInTicks)\n  {\n    encoderTicks += (encoders.getCountsAndResetLeft() + encoders.getCountsAndResetRight()) / 2;  // Mittelwert der Motorencoder\n    lineSensors.readCalibrated(linienSensorWerte);          // Sensorwerte lesen und in den Array `linienSensorWerte` schreiben\n    int sensorWert = linienSensorWerte[indexSensor];\n\n    /* (Fehlender Code)\n     * Jedes Bit des Barcodes wird genau einmal abgetastet  \n     */\n\n  }\n  \n  ledRed(0); ledGreen(1);\n}\n")),(0,i.kt)("h2",{id:"barcode-in-dezimalzahl-umwandeln"},"Barcode in Dezimalzahl umwandeln"),(0,i.kt)("details",{className:"ueben"}," ",(0,i.kt)("summary",null,"Aufgaben"),(0,i.kt)("p",null,"Schreiben Sie Function ",(0,i.kt)("inlineCode",{parentName:"p"},"int binToDez()"),", welche eine vom Roboter ausgelesene Bitfolgen in Dezimalzahlen umwandelt. Das erste Bit, also das Bit mit dem Index ",(0,i.kt)("inlineCode",{parentName:"p"},"[0]")," ist das Sync-Bit. Die Funktion soll zuerst \xfcberpr\xfcfen, ob das Sync-Bit ",(0,i.kt)("inlineCode",{parentName:"p"},"1")," ist und dann die andern Bits in eine Dezimalzahl umwandeln und als Ergebnis zur\xfcckgeben. Ist das Sync-Bit nicht ",(0,i.kt)("inlineCode",{parentName:"p"},"1"),", wird ",(0,i.kt)("inlineCode",{parentName:"p"},"-1")," zur\xfcckgegeben."),(0,i.kt)("p",null,"Testen Sie Ihre Funktion mit den angegeben Beispielen."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"bool code1[5] = {1,0,0,0,1}; // dezimal 1\nbool code2[5] = {1,1,0,0,0}; // dezimal 8\nbool code3[4] = {1,1,0,0};   // dezimal 4\nbool code4[4] = {1,1,1,0};   // dezimal 6\nbool code5[4] = {0,1,1,0};   // dezimal 6, aber kein Sync-Bit\n\nint codeToDec(bool pCode[], int pAnzahlBits){\n  /*\n   * Code f\xfcr die Umwandlung\n   */\n}\n"))),(0,i.kt)("h2",{id:"nicht-blockierender-dekoder-mulitasking"},"Nicht-blockierender Dekoder (Mulitasking)"),(0,i.kt)("h2",{id:"links"},"Links"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://barcode.tec-it.com/de"},"Barcodegenrator")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.logical-concepts.de/blog/barcode-typen/"},"Barcodetypen")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://aseba.wikidot.com/de:thymioreadsbarcodes"},"Thymio liest Barcodes"))))}w.isMDXComponent=!0}}]);