"use strict";(self.webpackChunkspace_hal_2=self.webpackChunkspace_hal_2||[]).push([[8603],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return u}});var a=t(7294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var o=a.createContext({}),m=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=m(e.components);return a.createElement(o.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,s=e.mdxType,r=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=m(t),u=s,h=d["".concat(o,".").concat(u)]||d[u]||c[u]||r;return t?a.createElement(h,i(i({ref:n},p),{},{components:t})):a.createElement(h,i({ref:n},p))}));function u(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var r=t.length,i=new Array(r);i[0]=d;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l.mdxType="string"==typeof e?e:s,i[1]=l;for(var m=2;m<r;m++)i[m]=t[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9032:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return m},toc:function(){return p},default:function(){return d}});var a=t(3117),s=t(102),r=(t(7294),t(3905)),i=["components"],l={id:"objektFinden",title:"Objekte Finden und den Roboter darauf ausrichten",sidebar_label:"Suchen und Ausrichten",custom_edit_url:null,keywords:["Arduino","zumo 32u4","Objekterkennung","Hinderniserkennung","Objekt","Hindernis","Objekt folgen","sumo","Robotik","Roboter"]},o=void 0,m={unversionedId:"robotik/objektFinden",id:"robotik/objektFinden",title:"Objekte Finden und den Roboter darauf ausrichten",description:"Ausrichten zu einem Hindernis ohne Suchen",source:"@site/docs/robotik/objektFinden.md",sourceDirName:"robotik",slug:"/robotik/objektFinden",permalink:"/docs/robotik/objektFinden",editUrl:null,tags:[],version:"current",frontMatter:{id:"objektFinden",title:"Objekte Finden und den Roboter darauf ausrichten",sidebar_label:"Suchen und Ausrichten",custom_edit_url:null,keywords:["Arduino","zumo 32u4","Objekterkennung","Hinderniserkennung","Objekt","Hindernis","Objekt folgen","sumo","Robotik","Roboter"]},sidebar:"sideBarRobotik",previous:{title:"Gyroskop",permalink:"/docs/robotik/gyroscope"},next:{title:"Gitternavigation",permalink:"/docs/robotik/gridNavigation"}},p=[{value:"Ausrichten zu einem Hindernis ohne Suchen",id:"ausrichten-zu-einem-hindernis-ohne-suchen",children:[],level:2},{value:"Suchen und Ausrichten",id:"suchen-und-ausrichten",children:[],level:2},{value:"Schnelles Suchen und Ausrichten",id:"schnelles-suchen-und-ausrichten",children:[],level:2},{value:"Schnelles Suchen und Ausrichten mit einem P(ID)-Regler",id:"schnelles-suchen-und-ausrichten-mit-einem-pid-regler",children:[],level:2},{value:"Einem Objekt folgen",id:"einem-objekt-folgen",children:[],level:2}],c={toc:p};function d(e){var n=e.components,t=(0,s.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"ausrichten-zu-einem-hindernis-ohne-suchen"},"Ausrichten zu einem Hindernis ohne Suchen"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Sieht")," ein Roboter mit den vorderen ",(0,r.kt)("a",{parentName:"p",href:"/docs/zumo32u4/proxy"},"N\xe4herungssensoren")," ein Objekt, so kann er sich zu diesem auch ausrichten.  Hierf\xfcr muss nur \xfcberpr\xfcft werden, ob sich das Objekt eher rechts oder eher links befindet. Die N\xe4herungssensoren des Zumo 32U4 k\xf6nnen zwar keine Entfernung zu einem Objekt bestimmen, wenn aber ein Objekt nicht mittig vor dem Roboter platziert ist, so wird der eine Sensor einen gr\xf6\xdferen Wert zur\xfcckgeben als der andere Sensor. Diese Eigenschaft wird f\xfcr das Ausrichten des Roboters genutzt. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"// Richtet den Roboter zu einem Hindernis aus\nwenn (sensorLinks > sensorRechts)\n    drehenLinks()\nsonst wenn (sensorLinks < sensorRechts)\n    drehenRechts()\nsonst\n    motorenStopp()\n")),(0,r.kt)("p",null,"Das vollst\xe4ndige Programm f\xfcr den Zumo 32U4 k\xf6nnte dann folgenderma\xdfen aussehen."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'/*  Zu einem Hindernis ausrichten. Wird kein Hindernis erkannt, bleibt der Roboter stehen. */\n\n#include <Zumo32U4.h>\n\nZumo32U4LCD lcd;\nZumo32U4ProximitySensors proxSensors;\nZumo32U4ButtonA buttonA;\nZumo32U4Motors motors;\n\nconst  int turnSpeed = 100;\n\nvoid setup()\n{\n  // Initialisierung des vorderen IR Sensors.\n  proxSensors.initFrontSensor();\n\n  // Helligkeitswerte: Je h\xf6her der Wert, desto eher wrid ein Objekt erkannt.\n  // Die verwendeten Helligkeitswerte eigenen sich gut f\xfcr eine wei\xdfe Box\n  int levels[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };            \n  proxSensors.setBrightnessLevels(levels, sizeof(levels));\n}\n\nvoid loop()\n{\n  proxSensors.read();  // Wertet den vorderen IR Sensor mit den IR-LEDs links und rechts aus.\n  int anzahlLinks = proxSensors.countsFrontWithLeftLeds();\n  int anzahlRechts = proxSensors.countsFrontWithRightLeds();\n\n  if (anzahlLinks < anzahlRechts) {\n    motors.setSpeeds (turnSpeed, -turnSpeed);\n  }\n  else if (anzahlLinks > anzahlRechts) {\n    motors.setSpeeds (-turnSpeed, turnSpeed);\n  }\n  else {\n    motors.setSpeeds (0, 0);\n  }\n\n  lcd.gotoXY(0, 0);\n  lcd.print("L"); lcd.print(anzahlLinks); lcd.print(" R"); lcd.print(anzahlRechts);\n}\n')),(0,r.kt)("h2",{id:"suchen-und-ausrichten"},"Suchen und Ausrichten"),(0,r.kt)("p",null,"Nachdem der Roboter nur zum Hindernis ausgerichtet wurde, wenn er es bereits gesehen hat, soll nun der Roboter des Hinderniss zus\xe4tzlich noch suchen. "),(0,r.kt)("p",null,"Daf\xfcr wird der logische Wert ",(0,r.kt)("inlineCode",{parentName:"p"},"seheHindernis")," ben\xf6tigt, der angibt, ob der Roboter ein Hinderniss sieht, also einer der beiden Sensoren einen gewissen Schwellwert \xfcberschreitet."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"// Hindernis suchen und danach ausrichten\n\nseheHindernis = (sensorLinks > schwellWert) ODER (sensorRechts > schwellWert)\n\nwenn (seheHindernis)                     // stoppen, wenn ein Hindernis erkannt wird\n    motorenStopp()\nsonst                                    // ansonsten drehen und suchen\n    wenn (sensorLinks > sensorRechts)\n        drehenLinks()\n    sonst\n        drehenRechts()\n\n")),(0,r.kt)("p",null,"Das Beispiel dreht den Roboter mit konstanter Geschwindigkeit so lange in eine Richtung, bis der Roboter ein Hindernis erkennt. "),(0,r.kt)("p",null,"Leider funktioniert der Algorithmus nicht besonders gut. Variieren Sie die Drehgeschwindigkeit des Roboter, wenn er kein Hindernis sieht und analysieren Sie das Verhalten. "),(0,r.kt)("h2",{id:"schnelles-suchen-und-ausrichten"},"Schnelles Suchen und Ausrichten"),(0,r.kt)("p",null,"Ein M\xf6glichkeit des Suchen und Ausrichten zu beschleunigen, w\xe4re die ",(0,r.kt)("strong",{parentName:"p"},"Drehgeschwindigkeit")," nicht konstant zu lassen, sondern sie in Abh\xe4ngigkeit von der Zeit, seit dem das Objekt das letzte mal gesehen wurde, zu ",(0,r.kt)("strong",{parentName:"p"},"\xe4ndern"),". "),(0,r.kt)("p",null,"Wenn kein Hindernis ",(0,r.kt)("inlineCode",{parentName:"p"},"bool seheHindernis = (sensorLinks > schwellWert) || (sensorRechts > schwellWert)")," gesehen wird, wird die Drehengeschwindigkeit des Roboter erh\xf6ht"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"turnSpeed += 20; // Geschwindigkeit erh\xf6hen\n")),(0,r.kt)("p",null,"Wenn ein Hindernis erkannt wird, soll die Geschwindigkeit langsam verringert werden:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"turnSpeed -= 20; // Geschwindigkeit erh\xf6hen\n")),(0,r.kt)("p",null,"Damit der Geschwindigkeitswert aber nicht zu gro\xdf oder klein wird, sollte dieser anschlie\xdfend noch begrenzt werden:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"turnSpeed = constrain(turnSpeed, minSpeed, maxSpeed);\n")),(0,r.kt)("details",{className:"ueben"}," ",(0,r.kt)("summary",null,"Aufgaben"),"\xdcberlegen Sie sich ein Programm, welches den Roboter so schnell wie m\xf6glich zu einen Objekt ausrichtet. Sieht der Roboter kein Objekt, soll er sich in die Richtung drehen, in welcher das Objekt das letzte mal gesehen wurde."),(0,r.kt)("h2",{id:"schnelles-suchen-und-ausrichten-mit-einem-pid-regler"},"Schnelles Suchen und Ausrichten mit einem P(ID)-Regler"),(0,r.kt)("p",null,"Ein weiterer Ansatz f\xfcrs Suchen und Ausrichten w\xe4re eine PID-Regler. Der Fehler f\xfcr den Regler ergibt sich dabei aus dem Unterschied zwischen dem linken und dem rechten N\xe4herungssensor:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"anzahlLinks  = proxSensors.countsFrontWithLeftLeds();\nanzahlRechts = proxSensors.countsFrontWithRightLeds();\nerror        = anzahlRechts - anzahlLinks;\n")),(0,r.kt)("p",null,"Wurde der Fehler bestimmt, kann dann mit dem P-Regler "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"turnSpeed = kp * error;\n")),(0,r.kt)("p",null,"oder einem vollst\xe4ndigen PID-Regler"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"turnSpeed = kp * error + ki * integral + kd * (lastError - error);\n")),(0,r.kt)("p",null,"und den geeigneten Faktoren ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msub"},"k"),(0,r.kt)("mi",{parentName:"msub"},"p"))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k_p")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.980548em",verticalAlign:"-0.286108em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15139200000000003em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.03148em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"p")))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.286108em"}},(0,r.kt)("span",{parentName:"span"})))))))))),", und ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msub"},"k"),(0,r.kt)("mi",{parentName:"msub"},"i"))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k_i")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.84444em",verticalAlign:"-0.15em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.31166399999999994em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.03148em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,r.kt)("span",{parentName:"span"})))))))))),", ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msub"},"k"),(0,r.kt)("mi",{parentName:"msub"},"d"))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k_d")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.84444em",verticalAlign:"-0.15em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.33610799999999996em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.5500000000000003em",marginLeft:"-0.03148em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"d")))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,r.kt)("span",{parentName:"span"}))))))))))," die Geschwindigkeit f\xfcr die R\xe4der bestimmt werden."),(0,r.kt)("h2",{id:"einem-objekt-folgen"},"Einem Objekt folgen"),(0,r.kt)("img",{src:"/img/robotik/FollowBox_1.gif",alt:"Roboter folgt einem Objekt mit Entfernungssensor",width:"500px",className:"center"}))}d.isMDXComponent=!0}}]);