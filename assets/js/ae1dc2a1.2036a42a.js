"use strict";(self.webpackChunkspace_hal_2=self.webpackChunkspace_hal_2||[]).push([[5786],{71587:function(e,r,t){t.r(r),t.d(r,{contentTitle:function(){return R},default:function(){return W},frontMatter:function(){return S},metadata:function(){return M},toc:function(){return Z}});var n=t(87462),i=t(63366),a=t(67294),o=t(3905),s=t(67478),l=t(66693),d=t(89630),p=t(24846),g=t(33466),c=t(11949),m=t(96486),u=["#252525","#525252","#737373","#969696","#bdbdbd","#d9d9d9","#f0f0f0"],k="#252525",h="#969696",w={width:600,height:300,padding:50,colorScale:u},f={fontFamily:"'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",fontSize:14,letterSpacing:"normal",padding:10,fill:k,stroke:"transparent"},b=(0,m.assign)({textAnchor:"middle"},f),x="round",y="round",v={area:(0,m.assign)({style:{data:{fill:k},labels:f}},w),axis:(0,m.assign)({style:{axis:{fill:"transparent",stroke:k,strokeWidth:1,strokeLinecap:x,strokeLinejoin:y},axisLabel:(0,m.assign)({},b,{padding:25}),grid:{fill:"none",stroke:"Gainsboro",strokeLinecap:x,strokeLinejoin:y,pointerEvents:"painted"},ticks:{fill:"transparent",size:1,stroke:"transparent"},tickLabels:f}},w),bar:(0,m.assign)({style:{data:{fill:k,padding:8,strokeWidth:0},labels:f}},w),boxplot:(0,m.assign)({style:{max:{padding:8,stroke:k,strokeWidth:1},maxLabels:(0,m.assign)({},f,{padding:3}),median:{padding:8,stroke:k,strokeWidth:1},medianLabels:(0,m.assign)({},f,{padding:3}),min:{padding:8,stroke:k,strokeWidth:1},minLabels:(0,m.assign)({},f,{padding:3}),q1:{padding:8,fill:h},q1Labels:(0,m.assign)({},f,{padding:3}),q3:{padding:8,fill:h},q3Labels:(0,m.assign)({},f,{padding:3})},boxWidth:20},w),candlestick:(0,m.assign)({style:{data:{stroke:k,strokeWidth:1},labels:(0,m.assign)({},f,{padding:5})},candleColors:{positive:"#ffffff",negative:k}},w),chart:w,errorbar:(0,m.assign)({borderWidth:8,style:{data:{fill:"transparent",stroke:k,strokeWidth:2},labels:f}},w),group:(0,m.assign)({colorScale:u},w),histogram:(0,m.assign)({style:{data:{fill:h,stroke:k,strokeWidth:2},labels:f}},w),legend:{colorScale:u,gutter:10,orientation:"vertical",titleOrientation:"top",style:{data:{type:"circle"},labels:f,title:(0,m.assign)({},f,{padding:5})}},line:(0,m.assign)({style:{data:{fill:"transparent",stroke:k,strokeWidth:2},labels:f}},w),pie:{style:{data:{padding:10,stroke:"transparent",strokeWidth:1},labels:(0,m.assign)({},f,{padding:20})},colorScale:u,width:400,height:400,padding:50},scatter:(0,m.assign)({style:{data:{fill:k,stroke:"transparent",strokeWidth:0},labels:f}},w),stack:(0,m.assign)({colorScale:u},w),tooltip:{style:(0,m.assign)({},f,{padding:0,pointerEvents:"none"}),flyoutStyle:{stroke:k,strokeWidth:1,fill:"#f0f0f0",pointerEvents:"none"},flyoutPadding:5,cornerRadius:5,pointerLength:10},voronoi:(0,m.assign)({style:{data:{fill:"transparent",stroke:"transparent",strokeWidth:0},labels:(0,m.assign)({},f,{padding:5,pointerEvents:"none"}),flyout:{stroke:k,strokeWidth:1,fill:"#f0f0f0",pointerEvents:"none"}}},w)},E=[{x:10076,speed:0,error:2e3,integral:2e3,power:200},{x:20108,speed:399,error:1601,integral:3601,power:360},{x:30108,speed:1200,error:800,integral:4e3,power:400},{x:40112,speed:1699,error:301,integral:4e3,power:400},{x:50108,speed:2150,error:-150,integral:3850,power:385},{x:60124,speed:2349,error:-349,integral:3501,power:350},{x:70116,speed:2700,error:-700,integral:2801,power:280},{x:80124,speed:2650,error:-650,integral:2151,power:215},{x:90128,speed:2598,error:-598,integral:1553,power:155},{x:100120,speed:2500,error:-500,integral:1053,power:105},{x:110124,speed:2200,error:-200,integral:853,power:85},{x:120132,speed:1999,error:1,integral:854,power:85},{x:130120,speed:1800,error:200,integral:1054,power:105},{x:140136,speed:1599,error:401,integral:1455,power:145},{x:150136,speed:1648,error:352,integral:1807,power:180},{x:160160,speed:1697,error:303,integral:2110,power:211},{x:170148,speed:1849,error:151,integral:2261,power:226},{x:180160,speed:1798,error:202,integral:2463,power:246},{x:190180,speed:1998,error:2,integral:2465,power:246},{x:200188,speed:2146,error:-146,integral:2319,power:231},{x:210196,speed:2248,error:-248,integral:2071,power:207},{x:220200,speed:2299,error:-299,integral:1772,power:177},{x:230220,speed:2297,error:-297,integral:1475,power:147},{x:240228,speed:2148,error:-148,integral:1327,power:132},{x:250236,speed:2048,error:-48,integral:1279,power:127},{x:260228,speed:1899,error:101,integral:1380,power:138},{x:270248,speed:1896,error:104,integral:1484,power:148},{x:280256,speed:1798,error:202,integral:1686,power:168},{x:290256,speed:1900,error:100,integral:1786,power:178},{x:300272,speed:1896,error:104,integral:1890,power:189},{x:310280,speed:1847,error:153,integral:2043,power:204},{x:320288,speed:1897,error:103,integral:2146,power:214},{x:330300,speed:2099,error:-99,integral:2047,power:204},{x:340296,speed:2149,error:-149,integral:1898,power:189},{x:350324,speed:2097,error:-97,integral:1801,power:180},{x:360332,speed:2098,error:-98,integral:1703,power:170},{x:370328,speed:2149,error:-149,integral:1554,power:155},{x:380328,speed:2099,error:-99,integral:1455,power:145},{x:390336,speed:1949,error:51,integral:1506,power:150},{x:400340,speed:1899,error:101,integral:1607,power:160},{x:410336,speed:1949,error:51,integral:1658,power:165},{x:420344,speed:1899,error:101,integral:1759,power:175},{x:430344,speed:1899,error:101,integral:1860,power:186},{x:440356,speed:1948,error:52,integral:1912,power:191},{x:450352,speed:1900,error:100,integral:2012,power:201},{x:460368,speed:2047,error:-47,integral:1965,power:196},{x:470376,speed:2097,error:-97,integral:1868,power:186},{x:480384,speed:2050,error:-50,integral:1818,power:181},{x:490384,speed:2099,error:-99,integral:1719,power:171}];var N=function(){return a.createElement("div",{style:{maxWidth:"650px",margin:"auto",border:"0px solid rgb(100, 100, 100)"}},a.createElement(s.Z,{style:{grid:{stroke:"#ddd444",strokeWidth:1.5}},containerComponent:a.createElement(l.Z,{cursorDimension:"y",cursorLabel:function(e){var r=e.datum;return""+Math.floor(r.y)},cursorLabelComponent:a.createElement(d.Z,{style:{fill:"Grey",fontStyle:"italic"},backgroundStyle:{fill:"White"},backgroundPadding:3}),cursorComponent:a.createElement(p.Z,null)}),width:600,height:300,theme:v,domainPadding:{x:[0,0],y:5},padding:{left:80,right:50,top:50,bottom:50}},a.createElement(d.Z,{x:20,y:10,style:{fontSize:"16px",fontWeight:"normal"},text:"I-Regler f\xfcr die Geschwindigkeit"}),a.createElement(d.Z,{x:550,y:10,text:"Motor Speed",style:{fontStyle:"italic",textAnchor:"end"}}),a.createElement(d.Z,{x:550,y:30,text:"Integral-Anteil",style:{fill:"#c43a31",fontStyle:"italic",textAnchor:"end"}}),a.createElement(d.Z,{x:20,y:130,angle:-90,text:"Encoder-Impulse pro Sekunde",style:{fontStyle:"italic",textAnchor:"middle"}}),a.createElement(d.Z,{x:320,y:290,angle:0,text:"Zeit",style:{fontStyle:"italic",textAnchor:"middle"}}),a.createElement(g.Z,{tickFormat:function(e){return Math.round(e)/1e3+" ms"}}),a.createElement(g.Z,{dependentAxis:!0,tickFormat:function(e){return""+Math.round(e)}}),a.createElement(c.Z,{animate:{duration:2e3,onLoad:{duration:2e3}},interpolation:"natural",data:E,x:"x",y:"speed"}),a.createElement(c.Z,{animate:{duration:2e3,onLoad:{duration:2e3}},interpolation:"natural",style:{data:{stroke:"#c43a31"}},data:E,x:"x",y:"error"})),a.createElement("div",{style:{margin:"auto"}},a.createElement("button",{className:"btnchart"},"  ki = 0.1  "),a.createElement("button",{className:"btnchart"},"  ki = 0.2  "),a.createElement("button",{className:"btnchart"},"  ki = 0.4  "),a.createElement("button",{className:"btnchart"},"  ki = 0.1, kp=1  "),a.createElement("button",{className:"btnchart"},"  ki = 0.2, kp =1  ")))},S={id:"speedControl",title:"Ein Integral-Regler f\xfcr die Geschwindigkeit",sidebar_label:"Geschwindigkeitsregler",description:"Mit einem Integralregler und Rad-Encodern wird die Geschwindigkeit eines Roboters geregelt.",custom_edit_url:null,keywords:["Arduino","Roboter","Robotik","Gesschwindigkeit regeln","Quadraturencoder","Inkrementalgeber","Radencoder","Motorencoder","Integralregler","Zumo 32u4"]},R=void 0,M={unversionedId:"robotik/speedControl",id:"robotik/speedControl",isDocsHomePage:!1,title:"Ein Integral-Regler f\xfcr die Geschwindigkeit",description:"Mit einem Integralregler und Rad-Encodern wird die Geschwindigkeit eines Roboters geregelt.",source:"@site/docs/robotik/speedControl.mdx",sourceDirName:"robotik",slug:"/robotik/speedControl",permalink:"/docs/robotik/speedControl",editUrl:null,tags:[],version:"current",frontMatter:{id:"speedControl",title:"Ein Integral-Regler f\xfcr die Geschwindigkeit",sidebar_label:"Geschwindigkeitsregler",description:"Mit einem Integralregler und Rad-Encodern wird die Geschwindigkeit eines Roboters geregelt.",custom_edit_url:null,keywords:["Arduino","Roboter","Robotik","Gesschwindigkeit regeln","Quadraturencoder","Inkrementalgeber","Radencoder","Motorencoder","Integralregler","Zumo 32u4"]},sidebar:"sideBarRobotik",previous:{title:"Geradeaus Fahren",permalink:"/docs/robotik/goStraight"},next:{title:"Odometrie",permalink:"/docs/robotik/odometrie"}},Z=[],I={toc:Z};function W(e){var r=e.components,t=(0,i.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},I,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Die Abbildung stellt den zeitlichen Verlauf des Integralanteils des Reglers und die resultierende Geschwindigkeit in Encoder-Impulsen pro Sekunde dar."),(0,o.kt)(N,{mdxType:"Mychart"}),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"\xdcBEN")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ol",{parentName:"div"},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Lassen Sie den Roboter \xfcber eine Zeit von ca. 0,4 Sekunden mit verschiedenen Geschwindigkeiten (200, 300, 400) fahren. Bestimmen sie gleichzeitig die ",(0,o.kt)("strong",{parentName:"p"},"aktuelle Geschwindigkeit in Impulsen pro Sekunde"),". Nutzen Sie f\xfcr die Zeitmessung f\xfcr eine bessere Genauigkeit die ",(0,o.kt)("a",{parentName:"p",href:"https://www.arduino.cc/reference/de/language/functions/time/micros/"},(0,o.kt)("inlineCode",{parentName:"a"},"micros()"))," Funktion. Geben Sie die Geschwindigkeiten w\xe4hrend des Beschleunigungsvorgangs auf dem seriellen Monitor aus."),(0,o.kt)("p",{parentName:"li"},"Stellen Sie abschlie\xdfend ihr Ergebnisse mit einem geeignetem Programm (z.B. ",(0,o.kt)("a",{parentName:"p",href:"https://support.microsoft.com/de-de/topic/darstellen-von-daten-im-punkt-oder-liniendiagramm-4570a80f-599a-4d6b-a155-104a9018b86e#OfficeVersion=Windows"},"Excel")," oder Openoffice) graphisch dar (y-Achse: Impulse pro Sekunde, x-Achse: Zeit in Millisekudnen) und beantworten Sie folgende Fragen:"),(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"Wie lange ben\xf6tigt der Roboter, bis er seine jeweilige Maximalgeschwindigkeit erreicht hat?"),(0,o.kt)("li",{parentName:"ol"},"Welcher Funktionstyp beschreibt den Zusammenhang zwischen Zeit und Geschwindigkeit am besten.   ")))),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre"},"// ...   \n\n// Zum Bestimmen der Geschwindigkeit sollten in einem festen Zeitintervall `dTime` die\n// Encoder-Impulse der R\xe4der bestimmt werden. Damit die Ergebnisse nicht zu stark schwanken\n// (Quantisierungsfehler), sollte das Zeitintervall in welchem die Encoder-Impulse bestimmt\n// werden so festgelegt sein, das im Mittel ca. 50 Impulse detektiert werden.\n\nint dTime = 20 * 1e3;                                  // in Mikrosekunden\n\nmotors.setSpeeds(MOTOR_POWER, MOTOR_POWER);\nwhile (jetzt - startTime < ON_TIME) {                  // Messung dauert insgesamt ON_TIME\n  aktuelleZeit = micros();                             // Nutzen Sie micros() f\xfcr eine bessere Genauigkeit\n  \n  if (aktuelleZeit - letztesIntervall >= dTime) { \n    letztesIntervall = aktuelleZeit;\n    int ticksLeft = encoders.getCountsAndResetRight(); // Impulse auslesen und zur\xfccksetzen\n    int ticksRight = encoders.getCountsAndResetLeft();\n    \n    // ... \n  }  \n}\n// ... \n")))))}W.isMDXComponent=!0}}]);