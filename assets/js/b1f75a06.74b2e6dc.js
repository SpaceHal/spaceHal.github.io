"use strict";(self.webpackChunkspacehale=self.webpackChunkspacehale||[]).push([[8603],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>u});var a=t(7294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var m=a.createContext({}),o=function(e){var n=a.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=o(e.components);return a.createElement(m.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,s=e.mdxType,r=e.originalType,m=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=o(t),u=s,h=d["".concat(m,".").concat(u)]||d[u]||c[u]||r;return t?a.createElement(h,i(i({ref:n},p),{},{components:t})):a.createElement(h,i({ref:n},p))}));function u(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var r=t.length,i=new Array(r);i[0]=d;var l={};for(var m in n)hasOwnProperty.call(n,m)&&(l[m]=n[m]);l.originalType=e,l.mdxType="string"==typeof e?e:s,i[1]=l;for(var o=2;o<r;o++)i[o]=t[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9032:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var a=t(7462),s=(t(7294),t(3905));const r={id:"objektFinden",title:"Objekte Finden und den Roboter darauf ausrichten",sidebar_label:"Suchen und Ausrichten",custom_edit_url:null,keywords:["Arduino","zumo 32u4","Objekterkennung","Hinderniserkennung","Objekt","Hindernis","Objekt folgen","sumo","Robotik","Roboter"]},i=void 0,l={unversionedId:"robotik/objektFinden",id:"robotik/objektFinden",title:"Objekte Finden und den Roboter darauf ausrichten",description:"Auf ein Hindernis ausrichten ohne zu suchen",source:"@site/docs/robotik/objektFinden.md",sourceDirName:"robotik",slug:"/robotik/objektFinden",permalink:"/docs/robotik/objektFinden",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"objektFinden",title:"Objekte Finden und den Roboter darauf ausrichten",sidebar_label:"Suchen und Ausrichten",custom_edit_url:null,keywords:["Arduino","zumo 32u4","Objekterkennung","Hinderniserkennung","Objekt","Hindernis","Objekt folgen","sumo","Robotik","Roboter"]},sidebar:"mySidebar",previous:{title:"Projekte",permalink:"/docs/category/projekte"},next:{title:"Barcode Auslesen",permalink:"/docs/robotik/botBarcode"}},m={},o=[{value:"Auf ein Hindernis ausrichten ohne zu suchen",id:"auf-ein-hindernis-ausrichten-ohne-zu-suchen",level:2},{value:"Ein Objekt suchen und dann ausrichten",id:"ein-objekt-suchen-und-dann-ausrichten",level:2},{value:"Schnelles Suchen und Ausrichten",id:"schnelles-suchen-und-ausrichten",level:2},{value:"Schnelles Suchen und Ausrichten mit einem P(ID)-Regler",id:"schnelles-suchen-und-ausrichten-mit-einem-pid-regler",level:2},{value:"Einem Objekt folgen",id:"einem-objekt-folgen",level:2}],p={toc:o};function c(e){let{components:n,...t}=e;return(0,s.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("img",{src:"/img/robotik/FollowBox_1.webp",alt:"Roboter folgt einem Objekt mit Entfernungssensor",width:"500px",className:"center"}),(0,s.kt)("h2",{id:"auf-ein-hindernis-ausrichten-ohne-zu-suchen"},"Auf ein Hindernis ausrichten ohne zu suchen"),(0,s.kt)("p",null,"Mit Hilfe der ",(0,s.kt)("a",{parentName:"p",href:"/docs/zumo32u4/proxy"},"N\xe4herungssensoren")," der Motoren kann sich der Zumo 32U4 auf ein nahes Objekt hin ausrichten. Daf\xfcr muss \xfcberpr\xfcft werden, ob sich das Objekt eher rechts oder eher links vom Roboter befindet. Befindet sich das Objekt eher links, muss sich der Roboter nach rechts drehen, befindet es sich eher rechts, muss er sich andersherum drehen. Geben beide Sensoren die selben Werte zur\xfcck, so befindet sich das Objekt eher in der Mitte und der Roboter bleibt stehen. "),(0,s.kt)("p",null,"Daraus ergibt sich ein einfacher Algorithmus zum Ausrichten."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},"// Richtet den Roboter zu einem Hindernis aus\nwenn (sensorLinks > sensorRechts)\n    drehenLinks()\nsonst wenn (sensorLinks < sensorRechts)\n    drehenRechts()\nsonst\n    motorenStopp()\n")),(0,s.kt)("p",null,"Das vollst\xe4ndiges Programm f\xfcr den Zumo 32U4 k\xf6nnte dann folgenderma\xdfen aussehen:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'/*  Zu einem Hindernis ausrichten. Wird kein Hindernis erkannt, bleibt der Roboter stehen. */\n\n#include <Zumo32U4.h>\n\nZumo32U4LCD lcd;\nZumo32U4ProximitySensors proxSensors;\nZumo32U4ButtonA buttonA;\nZumo32U4Motors motors;\n\nconst  int turnSpeed = 100;\n\nvoid setup()\n{\n  // Initialisierung des vorderen IR Sensors.\n  proxSensors.initFrontSensor();\n\n  // Helligkeitswerte: Je h\xf6her der Wert, desto eher wird ein Objekt erkannt.\n  // Die verwendeten Helligkeitswerte eigenen sich gut f\xfcr eine wei\xdfe Box\n  int levels[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };            \n  proxSensors.setBrightnessLevels(levels, sizeof(levels)/sizeof(levels[0]));\n}\n\nvoid loop()\n{\n  proxSensors.read();  // Wertet den vorderen IR Sensor mit den IR-LEDs links und rechts aus.\n  int anzahlLinks = proxSensors.countsFrontWithLeftLeds();\n  int anzahlRechts = proxSensors.countsFrontWithRightLeds();\n\n  if (anzahlLinks < anzahlRechts) {\n    motors.setSpeeds (turnSpeed, -turnSpeed);\n  }\n  else if (anzahlLinks > anzahlRechts) {\n    motors.setSpeeds (-turnSpeed, turnSpeed);\n  }\n  else {\n    motors.setSpeeds (0, 0);\n  }\n\n  lcd.gotoXY(0, 0);\n  lcd.print("L"); lcd.print(anzahlLinks); lcd.print(" R"); lcd.print(anzahlRechts);\n}\n')),(0,s.kt)("h2",{id:"ein-objekt-suchen-und-dann-ausrichten"},"Ein Objekt suchen und dann ausrichten"),(0,s.kt)("p",null,"Im letztem Absatz hat sich der Roboter zu einem Hindernis ausgerichtet, welches mit den N\xe4herungssensoren bereits erfasst wurde. Nun soll der Roboter das Hinderniss suchen und sich dann darauf ausrichten. Daf\xfcr wird der logische Wert ",(0,s.kt)("inlineCode",{parentName:"p"},"seheHindernis")," ben\xf6tigt, der angibt, ob der Roboter ein Hinderniss sieht, also einer der beiden Sensoren einen gewissen Schwellwert \xfcberschreitet."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},"bool seheHindernis = (sensorLinks > schwellWert) ODER (sensorRechts > schwellWert)\n")),(0,s.kt)("p",null,"Das Beispiel dreht den Roboter mit konstanter Geschwindigkeit so lange in eine Richtung, bis der Roboter ein Hindernis erkennt. "),(0,s.kt)("p",null,"Leider funktioniert der Algorithmus nicht besonders gut. Variieren Sie die Drehgeschwindigkeit des Roboter, wenn er kein Hindernis sieht und analysieren Sie das Verhalten. "),(0,s.kt)("details",{className:"ueben"}," ",(0,s.kt)("summary",null,"Aufgaben"),"Schreiben Sie ein einfaches Programm, welches den Roboter mit konstanter Drehgeschwindigkeit auf der Stelle nach einem Objekt suchen l\xe4sst. Hat er ein Objekt gesehen, soll er sich langsam darauf ausrichten. Nutzen Sie die Variable `bool seheHindernis` ."),(0,s.kt)("h2",{id:"schnelles-suchen-und-ausrichten"},"Schnelles Suchen und Ausrichten"),(0,s.kt)("p",null,"Ein M\xf6glichkeit des Suchen und Ausrichten zu beschleunigen, ist die ",(0,s.kt)("strong",{parentName:"p"},"Drehgeschwindigkeit")," nicht konstant zu lassen, sondern sie, je nachdem ob ein Objekt erkannt wurde oder nicht, schrittweise zu erh\xf6hen oder zu verringern."),(0,s.kt)("p",null,"Wenn kein Hindernis ",(0,s.kt)("inlineCode",{parentName:"p"},"bool seheHindernis = (sensorLinks > schwellWert) || (sensorRechts > schwellWert)")," gesehen wird, wird die Drehengeschwindigkeit des Roboter also erh\xf6ht"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"turnSpeed += 20; // Geschwindigkeit erh\xf6hen\n")),(0,s.kt)("p",null,"Wenn ein Hindernis erkannt wird, soll die Geschwindigkeit langsam verringert werden:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"turnSpeed -= 20; // Geschwindigkeit erh\xf6hen\n")),(0,s.kt)("p",null,"Damit der Geschwindigkeitswert aber nicht zu gro\xdf oder klein wird, sollte dieser anschlie\xdfend noch begrenzt werden:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"turnSpeed = constrain(turnSpeed, minSpeed, maxSpeed);\n")),(0,s.kt)("h2",{id:"schnelles-suchen-und-ausrichten-mit-einem-pid-regler"},"Schnelles Suchen und Ausrichten mit einem P(ID)-Regler"),(0,s.kt)("p",null,"Ein weiterer Ansatz f\xfcrs Suchen und Ausrichten w\xe4re eine PID-Regler. Der Fehler f\xfcr den Regler ergibt sich dabei aus dem Unterschied zwischen dem linken und dem rechten N\xe4herungssensor:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"anzahlLinks  = proxSensors.countsFrontWithLeftLeds();\nanzahlRechts = proxSensors.countsFrontWithRightLeds();\nerror        = anzahlRechts - anzahlLinks;\n")),(0,s.kt)("p",null,"Wurde der Fehler bestimmt, kann dann mit dem P-Regler "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"turnSpeed = kp * error;\n")),(0,s.kt)("p",null,"oder einem vollst\xe4ndigen PID-Regler"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"turnSpeed = kp * error + ki * integral + kd * (lastError - error);\n")),(0,s.kt)("p",null,"und den geeigneten Faktoren ",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msub",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msub"},"k"),(0,s.kt)("mi",{parentName:"msub"},"p"))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k_p")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.9805em",verticalAlign:"-0.2861em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.1514em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"-0.0315em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"p")))),(0,s.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.2861em"}},(0,s.kt)("span",{parentName:"span"})))))))))),", und ",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msub",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msub"},"k"),(0,s.kt)("mi",{parentName:"msub"},"i"))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k_i")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8444em",verticalAlign:"-0.15em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.3117em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"-0.0315em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i")))),(0,s.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,s.kt)("span",{parentName:"span"})))))))))),", ",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msub",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msub"},"k"),(0,s.kt)("mi",{parentName:"msub"},"d"))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k_d")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8444em",verticalAlign:"-0.15em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.3361em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"-0.0315em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"d")))),(0,s.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,s.kt)("span",{parentName:"span"})))))))))),", die Geschwindigkeit f\xfcr die R\xe4der bestimmt werden."),(0,s.kt)("details",{className:"ueben"}," ",(0,s.kt)("summary",null,"Aufgaben"),(0,s.kt)("p",null,"\xdcberlegen Sie sich ein Programm, welches den Roboter ",(0,s.kt)("strong",{parentName:"p"},"so schnell wie m\xf6glich")," zu einen Objekt ausrichtet. Sieht der Roboter kein Objekt, soll er sich in die Richtung drehen, in welcher das Objekt das letzte mal gesehen wurde.")),(0,s.kt)("h2",{id:"einem-objekt-folgen"},"Einem Objekt folgen"),(0,s.kt)("p",null,"Nutzen Sie die obigen Ans\xe4tze, um den Zumo 32u4 einem Objekt (z.B. wei\xdfe Box) folgen zu lassen. Daf\xfcr sollte sich der Roboter auf das Objekt ausrichten k\xf6nnen und zus\xe4tzlich den Abstand zum Objekt konstant halten."))}c.isMDXComponent=!0}}]);