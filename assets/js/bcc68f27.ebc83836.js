"use strict";(self.webpackChunkspace_hal_2=self.webpackChunkspace_hal_2||[]).push([[2226],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return c}});var i=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=i.createContext({}),p=function(e){var n=i.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=p(e.components);return i.createElement(d.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},m=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=p(t),c=a,k=m["".concat(d,".").concat(c)]||m[c]||u[c]||r;return t?i.createElement(k,l(l({ref:n},s),{},{components:t})):i.createElement(k,l({ref:n},s))}));function c(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=m;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<r;p++)l[p]=t[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9810:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return d},metadata:function(){return p},toc:function(){return s},default:function(){return m}});var i=t(3117),a=t(102),r=(t(7294),t(3905)),l=["components"],o={title:"Programmiertechniken - Variablen",sidebar_label:"3. Variablen",description:"Variablentypen bei Arduino. Welche gibt es, wie benutze ich sie und was ist der G\xfcltigkeitsbereich.",custom_edit_url:null,keywords:["Arduino","Variablen","bool","char","int","long","float","unsigned"]},d=void 0,p={unversionedId:"arduino/variable",id:"arduino/variable",isDocsHomePage:!1,title:"Programmiertechniken - Variablen",description:"Variablentypen bei Arduino. Welche gibt es, wie benutze ich sie und was ist der G\xfcltigkeitsbereich.",source:"@site/docs/arduino/variable.md",sourceDirName:"arduino",slug:"/arduino/variable",permalink:"/docs/arduino/variable",editUrl:null,tags:[],version:"current",lastUpdatedAt:1630426919,formattedLastUpdatedAt:"31.8.2021",frontMatter:{title:"Programmiertechniken - Variablen",sidebar_label:"3. Variablen",description:"Variablentypen bei Arduino. Welche gibt es, wie benutze ich sie und was ist der G\xfcltigkeitsbereich.",custom_edit_url:null,keywords:["Arduino","Variablen","bool","char","int","long","float","unsigned"]},sidebar:"sideBarArduino",previous:{title:"2. Serielle Schnittstelle",permalink:"/docs/arduino/seriell"},next:{title:"4. Schleifen",permalink:"/docs/arduino/loop"}},s=[{value:"Variablenname",id:"variablenname",children:[],level:2},{value:"Datentyp",id:"datentyp",children:[{value:"Zusammenfassung einiger Datentypen",id:"zusammenfassung-einiger-datentypen",children:[],level:3},{value:"Beispiele Deklaration",id:"beispiele-deklaration",children:[],level:3}],level:2},{value:"Zuweisung und Initialisierung",id:"zuweisung-und-initialisierung",children:[],level:2},{value:"Einfache Rechenoperationen",id:"einfache-rechenoperationen",children:[],level:2},{value:"G\xfcltigkeitsbreich (Scope)",id:"g\xfcltigkeitsbreich-scope",children:[{value:"Lokale Variablen",id:"lokale-variablen",children:[],level:4},{value:"Globale Variablen",id:"globale-variablen",children:[],level:4},{value:"Beispiel",id:"beispiel",children:[],level:3}],level:2}],u={toc:s};function m(e){var n=e.components,t=(0,a.Z)(e,l);return(0,r.kt)("wrapper",(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"In der Informatik sind ",(0,r.kt)("strong",{parentName:"p"},"Variablen")," eine Art Platzhalter oder Container f\xfcr Daten und Informationen. Der Inhalt einer Variablen kann sich jederzeit \xe4ndern. Um eine Variable nutzen zu k\xf6nnen, muss im Programmcode f\xfcr jede Variable der ",(0,r.kt)("strong",{parentName:"p"},"Variablenname")," und der ",(0,r.kt)("strong",{parentName:"p"},"Datentyp")," (ob es sich um einen Text, Zahl, Buchstabe, etc. handelt) festgelegt werden. Diese Festlegung der Eigenschaften einer Variablen wird ",(0,r.kt)("strong",{parentName:"p"},"Deklaration")," bzw. ",(0,r.kt)("strong",{parentName:"p"},"Variablendeklaration")," genannt (von ",(0,r.kt)("a",{parentName:"p",href:"https://de.langenscheidt.com/latein-deutsch/declarare"},(0,r.kt)("em",{parentName:"a"},"declarare"))," lat. bekannt machen, bezeichnen)."),(0,r.kt)("h2",{id:"variablenname"},"Variablenname"),(0,r.kt)("p",null,"Der ",(0,r.kt)("strong",{parentName:"p"},"Variablenname")," soll immer beschreiben, welche Funktion oder welchen Inhalt eine Variable hat. Es ist sinnvoll, f\xfcr Variablen Begriffe wie ",(0,r.kt)("inlineCode",{parentName:"p"},"wertSensorLinks")," oder ",(0,r.kt)("inlineCode",{parentName:"p"},"pinRoteLED")," zu verwenden."),(0,r.kt)("p",null,"Variablennamen sollten immer mit einem Kleinbuchstaben beginnen. Die Nutzung eines Unterstrichs zum Trennen einzelner W\xf6rter sollte vermieden werden. Stattdessen kann zur verbesserten Lesbarkeit bei zusammengesetzten  W\xf6rtern die Gro\xdfschreibung verwendet werden. Statt ",(0,r.kt)("inlineCode",{parentName:"p"},"zustand_motor_links")," sollte die Variable besser ",(0,r.kt)("inlineCode",{parentName:"p"},"zustandMotorLinks")," genannt werden."),(0,r.kt)("h2",{id:"datentyp"},"Datentyp"),(0,r.kt)("p",null,"Variablen k\xf6nnen f\xfcr viele verschiedene Datentypen festgelegt werden. Der ",(0,r.kt)("strong",{parentName:"p"},"Datentyp")," gibt an, ob die Variable z.B. Zahlen oder Buchstaben beinhalten kann. "),(0,r.kt)("p",null,"Die wichtigsten Datentypen beim Arduino:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"bool"),": Speichert nur die ",(0,r.kt)("strong",{parentName:"li"},"logischen Zust\xe4nde")," bzw. Werte ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," (1) oder ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," (0), also wahr oder falsch ab."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"char"),": Zum Speichern ",(0,r.kt)("strong",{parentName:"li"},"einzelner Buchstabe"),"n wird der Datentyp ",(0,r.kt)("inlineCode",{parentName:"li"},"char")," verwendet."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"int")," und ",(0,r.kt)("inlineCode",{parentName:"li"},"long"),": Gelten f\xfcr ",(0,r.kt)("strong",{parentName:"li"},"ganzahlige Werte"),", wobei ",(0,r.kt)("inlineCode",{parentName:"li"},"int")," einen deutlich kleineren Wertebereich hat (-32.768 bis 32.767)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"unsigned int")," und ",(0,r.kt)("inlineCode",{parentName:"li"},"unsigned long"),": \xc4hnlich wie ",(0,r.kt)("inlineCode",{parentName:"li"},"int")," und ",(0,r.kt)("inlineCode",{parentName:"li"},"long"),", allerdings k\xf6nnen nur ",(0,r.kt)("strong",{parentName:"li"},"positive ganzzahlige Werte")," gesspeichert werden. Dadurch verdoppelt sich der Wertebereich der positiven Zahlen."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"float")," und ",(0,r.kt)("inlineCode",{parentName:"li"},"double"),": Werden f\xfcr ",(0,r.kt)("strong",{parentName:"li"},"Flie\xdfkommazahlen")," (als Dezimalbr\xfcche mit festgelegter Genauigkeit) verwendet. ",(0,r.kt)("inlineCode",{parentName:"li"},"double")," wei\xdft ein deutliche h\xf6here Genauigkeit auf, ben\xf6tigt allerddings auch dppelt soviel Speicher wie ",(0,r.kt)("inlineCode",{parentName:"li"},"float"),".")),(0,r.kt)("h3",{id:"zusammenfassung-einiger-datentypen"},"Zusammenfassung einiger Datentypen"),(0,r.kt)("p",null,"Die Gr\xf6\xdfe der aufgelisteten Datentypen gilt nur bei einigen Arduino-Boards (Arduino-Uno, Arduino-Nano, ...)"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Datentyp"),(0,r.kt)("th",{parentName:"tr",align:"center"},"kleinster Wert"),(0,r.kt)("th",{parentName:"tr",align:"center"},"gr\xf6\xdfter Wert"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Gr\xf6\xdfe in Bit"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Anmerkungen"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bool")),(0,r.kt)("td",{parentName:"tr",align:"center"},"false (0)"),(0,r.kt)("td",{parentName:"tr",align:"center"},"true (1)"),(0,r.kt)("td",{parentName:"tr",align:"center"},"8"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("em",{parentName:"td"},"logische Zust\xe4nde"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"int")),(0,r.kt)("td",{parentName:"tr",align:"center"},"- 32 768"),(0,r.kt)("td",{parentName:"tr",align:"center"},"32 767"),(0,r.kt)("td",{parentName:"tr",align:"center"},"16"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("em",{parentName:"td"},"Ganze Zahlen"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"unsigned int")),(0,r.kt)("td",{parentName:"tr",align:"center"},"0"),(0,r.kt)("td",{parentName:"tr",align:"center"},"65535"),(0,r.kt)("td",{parentName:"tr",align:"center"},"16"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("em",{parentName:"td"},"nur positive Ganze Zahlen"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"long")),(0,r.kt)("td",{parentName:"tr",align:"center"},"- 2 147 483 648"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2 147 483 647"),(0,r.kt)("td",{parentName:"tr",align:"center"},"32"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("em",{parentName:"td"},"Ganze Zahlen"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"unsigned long")),(0,r.kt)("td",{parentName:"tr",align:"center"},"0"),(0,r.kt)("td",{parentName:"tr",align:"center"},"4 294 967 295"),(0,r.kt)("td",{parentName:"tr",align:"center"},"32"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("em",{parentName:"td"},"nur positive Ganze Zahlen"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"float")),(0,r.kt)("td",{parentName:"tr",align:"center"},"3,4E-38"),(0,r.kt)("td",{parentName:"tr",align:"center"},"3,4E+38"),(0,r.kt)("td",{parentName:"tr",align:"center"},"32"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("em",{parentName:"td"},"Flie\xdfkommazahlen"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"double")),(0,r.kt)("td",{parentName:"tr",align:"center"},"3,4E-38"),(0,r.kt)("td",{parentName:"tr",align:"center"},"3,4E+38"),(0,r.kt)("td",{parentName:"tr",align:"center"},"32"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("em",{parentName:"td"},"bei ",(0,r.kt)("a",{parentName:"em",href:"https://www.arduino.cc/reference/de/language/variables/data-types/double/"},"ATMEGA Boards")," wie float"))))),(0,r.kt)("p",null,"Oft werden auch ",(0,r.kt)("a",{parentName:"p",href:"https://de.wikibooks.org/wiki/C-Programmierung_mit_AVR-GCC/_Datentypen"},"alternative Datentypen")," benutzt, die die Kompatibilit\xe4t  mit verschiedenen Mikrocontrollern verbessern sollen:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"uint8_t")," , ",(0,r.kt)("inlineCode",{parentName:"li"},"uint16_t"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"uint32_t"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"uint64_t"),": Speichern positive ganzzahlige Werte mit der angegeben Bitbreite (8, 16, 32, 64 bit)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"int8_t")," , ",(0,r.kt)("inlineCode",{parentName:"li"},"int16_t"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"int32_t"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"int64_t"),": Speichert positive ",(0,r.kt)("strong",{parentName:"li"},"und")," negative ganzzahlige Werte mit der angegeben Bitbreite (8, 16, 32, 64 bit)")),(0,r.kt)("h3",{id:"beispiele-deklaration"},"Beispiele Deklaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"int pinRoteLed;   // Die Variable kann nur ganzzahlige Werte annehmen\nfloat fehlerwert; // Die Variable kann auch eine Flie\xdfkommazahl (Dezimalbruch) sein.\n")),(0,r.kt)("h2",{id:"zuweisung-und-initialisierung"},"Zuweisung und Initialisierung"),(0,r.kt)("p",null,"Nachdem eine Variable ",(0,r.kt)("strong",{parentName:"p"},"deklariert")," wurde, ist es m\xf6glich, ihr auch einen ",(0,r.kt)("strong",{parentName:"p"},"Wert zuzuweisen"),". Zuweisungen werden mit dem ",(0,r.kt)("inlineCode",{parentName:"p"},"=")," Operator durchgef\xfchrt. Auch wenn es nicht immer ganz offensichtlich ist, sollte der  ",(0,r.kt)("inlineCode",{parentName:"p"},"=")," Operator nicht mit dem Gleichheitszeichen (=) in der Mathematik verwechselt werden. Das Gleichheitszeichen dr\xfcckt aus, dass etwas ",(0,r.kt)("strong",{parentName:"p"},"gleich ist"),". Der Zuweisungs-Operator ",(0,r.kt)("strong",{parentName:"p"},"weist")," der Variablen einen Wert ",(0,r.kt)("strong",{parentName:"p"},"zu"),". Dieser Unterschied wird sp\xe4ter wichtig, wenn Vergleichsoperatoren wie zum Beispiel ",(0,r.kt)("inlineCode",{parentName:"p"},"==")," verwendet werden."),(0,r.kt)("p",null,"Zuweisungen k\xf6nnen getrennt von der Variablendeklaration durchgef\xfchrt werden. Wird einer Variablen das erste Mal ein Wert zugewiesen, spricht man auch von der ",(0,r.kt)("strong",{parentName:"p"},"Initialisierung")," der Variablen. Bevor eine Variable initialisiert wurde,  ist der Wert der Variablen unbekannt."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"int auszeitRoteLed;    // Variablendeklaration (Wert der Variable ist unbekannt)\nauszeitRoteLed = 1000; // Zuweisung und Initialisierung\n\nauszeitRoteLed = 300;  // eine erneute Zuweisung \xfcberschreibt die Variable mit einem neuen Wert\n")),(0,r.kt)("p",null,"Da jede Variable deklariert und auch initialisiert werden muss, kann das auch in einer Programmzeile gemacht werden."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"float fehlerWert  = 3.1415; // Deklaration und erst Zuweisung, also Initialisierung in einer Zeile.\nint pinLED        = 12;     // Initialisierung eines Integer-Wertes\nchar einBuchstabe = `b`;    // Initialisierung eines char-Datentypes.\n")),(0,r.kt)("h2",{id:"einfache-rechenoperationen"},"Einfache Rechenoperationen"),(0,r.kt)("p",null,"Mit Variablen k\xf6nnen nicht nur Werte gespeichert werden, sondern mit ihnen k\xf6nnen auch verschiedene Rechenoperationen (z.B. Addition ",(0,r.kt)("inlineCode",{parentName:"p"},"+"),", Subtraktion ",(0,r.kt)("inlineCode",{parentName:"p"},"-"),", Multiplikation ",(0,r.kt)("inlineCode",{parentName:"p"},"*"),", Division ",(0,r.kt)("inlineCode",{parentName:"p"},"/"),") durchgef\xfchrt werden. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"int a = 6;\nint b = 3;\nint c;\n\nc = a - b; //  c: 3\nc = a + b; //  c: 9\nc = a * b; //  c: 18\nc = a / b; //  c: 2\n")),(0,r.kt)("p",null,"Nicht immer soll das Ergebnis einer Rechenoperation in einer ",(0,r.kt)("em",{parentName:"p"},"neuen")," Variable gespeichert werden. In diesem Fall kann das Ergebnis auch direkt den alten Wert der Variablen \xfcberschreiben."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"int i = 1;\ni = i + 1; // i: 2\n\nint a = 6;\ni = i + 6; // i: 2 + 6 = 8\n")),(0,r.kt)("h2",{id:"g\xfcltigkeitsbreich-scope"},"G\xfcltigkeitsbreich (Scope)"),(0,r.kt)("p",null,"Kann auf eine Variable im gesamten Programm zu gegriffen werden, handelt es sich um eine ",(0,r.kt)("strong",{parentName:"p"},"globale Variable"),". Existiert eine Variabel nur in Teilen des Programms, handelt es sich um ",(0,r.kt)("strong",{parentName:"p"},"lokale Variablen")),(0,r.kt)("p",null,"Ob ein Variable global oder lokal ist, h\xe4ngt davon ab, wo sie deklariert wurde."),(0,r.kt)("h4",{id:"lokale-variablen"},"Lokale Variablen"),(0,r.kt)("p",null,"Variablen, die in einem Programmabschnitt deklariert wurden, der durch zwei geschweifte Klammern ",(0,r.kt)("inlineCode",{parentName:"p"},"{ ... }")," begrenzt ist, sind lokale Variablen. Bisher kennen sie nur die ",(0,r.kt)("inlineCode",{parentName:"p"},"void loop()")," bzw. ",(0,r.kt)("inlineCode",{parentName:"p"},"void setup()")," Funktionen, welche einen durch geschweifte Klammern begrenzten Bereich aufweisen. Deklarieren Sie also eine Variable innerhalb dieser Funktionen, existieren Sie auch nur innerhalb dieser Funktionen. Wird die Funktion beendet, verschwindet auch die Variable."),(0,r.kt)("p",null,"Lokale Variablen sollten immer mit einem kleinen ",(0,r.kt)("inlineCode",{parentName:"p"},"l")," beginen: ",(0,r.kt)("inlineCode",{parentName:"p"},"lMessWert"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"lZaehler"),"."),(0,r.kt)("h4",{id:"globale-variablen"},"Globale Variablen"),(0,r.kt)("p",null,"Wird eine Variable au\xdferhalb von geschweiften Klammern ",(0,r.kt)("inlineCode",{parentName:"p"},"{ ... }")," deklariert, so ist die Variable global. Sie wird solange existieren, wie das Programm l\xe4uft und es kann aus dem gesamten Programmcode darauf zugegriffen werden."),(0,r.kt)("h3",{id:"beispiel"},"Beispiel"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'int pinLed = 12; // globale Variable\nint zaehlerGlobal = 0;\n\nvoid setup(){                // Geschweifte Klammern geben einen G\xfcltigkeitsbereich (Scope) an.\n  int lZaehlerSetup = 0;     // Lokale Variable\n  pinMode(pinLed,OUTPUT);    // kann die globale Variable pinLed nutzen\n  Serial.begin(9600);\n}\n\nvoid loop(){ \n  int lZaehlerLoop = 0;\n\n  zaehlerGlobal  = zaehlerGlobal + 1;\n  //lZaehlerSetup   = lZaehlerSetup  + 1;  // FEHLER: lZaehlerSetup existiert hier nicht\n  lZaehlerLoop    = lZaehlerLoop   + 1;\n\n  Serial.print("zaehlerGlobal: ");\n  Serial.print(zaehlerGlobal);             // zaehlerGlobal: 1, 2, 3, ...\n  Serial.print(", lZaehlerLoop: ");\n  Serial.println(lZaehlerLoop);            // lZaehlerLoop:   1, 1, 1, ... (lZahlerLoop wird immer wieder neu initialisiert.)\n}\n')),(0,r.kt)("details",{className:"ueben"}," ",(0,r.kt)("summary",null,"Aufgaben - Programmieren"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Erl\xe4utern Sie den Unterschied zwischen einer ",(0,r.kt)("strong",{parentName:"li"},"Deklaration"),", einer ",(0,r.kt)("strong",{parentName:"li"},"Zuweisung")," und ein ",(0,r.kt)("strong",{parentName:"li"},"Initialisierung")," einer Variablen. Geben Sie jeweils ein Beispiel an."),(0,r.kt)("li",{parentName:"ol"},"Mit welchen Datentypen l\xe4sst sich die Zahl ",(0,r.kt)("inlineCode",{parentName:"li"},"42465")," speichern."),(0,r.kt)("li",{parentName:"ol"},"Lassen Sie mit dem seriellen Monitor und ",(0,r.kt)("inlineCode",{parentName:"li"},"Serial.println()")," fortlaufend alle durch 8 teilbaren Zahlen ausgeben."))))}m.isMDXComponent=!0}}]);